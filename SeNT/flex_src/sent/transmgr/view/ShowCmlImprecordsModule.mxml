<?xml version="1.0" encoding="utf-8"?>
<grg:TabModule xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx"  
			   xmlns:parsley="http://www.spicefactory.org/parsley"
			   xmlns:grg="http://grg.grgbanking.com/platform/" 
			   dataDictionaryPaths="{[CmlImpRecordConsts.UPLOAD_STATUS]}"
			   locale ="showCmlImprecordsModule"
			   xmlns:userDefined="platform.date.*"
			   layout="vertical" 
			   width="100%" height="100%"
			   >
	
	<fx:Declarations>
		<parsley:ContextBuilder>
			<parsley:ViewSettings autoremoveViewRoots="false"/>
			<parsley:Scope name="ShowCmlImprecordsModule"/> 
			<parsley:MessageSettings defaultReceiverScope="ShowCmlImprecordsModule"/>
			<parsley:FlexConfig type="{ShowCmlImprecordsConfig}"/>
			<parsley:FlexConfig type="{CmlImprecordsConfig}"/>
			<parsley:FlexConfig type="{CmlSentInfoConfig}"/>
			<parsley:FlexConfig type="{DataDictConfig}"/>
		</parsley:ContextBuilder>
		<parsley:Configure/>
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import cml.common.PersonSelectForm;
			
			import mx.collections.ArrayCollection;
			import mx.collections.ListCollectionView;
			import mx.controls.Alert;
			import mx.managers.CursorManager;
			import mx.utils.ObjectUtil;
			
			import platform.common.manager.AlertHandler;
			import platform.common.manager.LanguageManager;
			import platform.common.manager.PopUpManager;
			import platform.common.vo.Page;
			import platform.dataDict.DataDictConfig;
			
			import sent.common.utils.DataGridColumnUtils;
			import sent.common.utils.DateUtils;
			import sent.transmgr.config.CmlImprecordsConfig;
			import sent.transmgr.config.CmlSentInfoConfig;
			import sent.transmgr.config.ShowCmlImprecordsConfig;
			import sent.transmgr.constants.CmlImpRecordConsts;
			import sent.transmgr.message.CmlImprecordMsg;
			import sent.transmgr.pm.CmlImpRecordsPM;
			import sent.transmgr.pm.ShowCmlImprecordsModulePM;
			import sent.transmgr.vo.CmlImprecordsDetailVO;
			import platform.common.util.StringUtil;
			private var langMgr:LanguageManager = LanguageManager.getInstance();
			
			/**
			 *导出按钮的图标
			 **/
			[Bindable]
			[Embed(source="resources/theme/newui/input.png")] 
			private var impInfo:Class; 
			
			[Inject]
			[Bindable]
			public var pm:ShowCmlImprecordsModulePM;
			
			[Inject]
			[Bindable]
			public var cmlImpRecordsPM:CmlImpRecordsPM;
			
			[Bindable]
			public var cmlImpRecordPage:Page = new Page();
			
			
			//全部
			[Bindable]
			public var uploadStatusAll:ArrayCollection=new ArrayCollection();
			
			
			override public function dispose():void
			{
				trace("ShowCmlImprecordsModule.dispose");
				cmlSentFileUploadDataGrid.checkedItems = [];
			}
			
			
			/**
			 * 获取数据字典后更新信息
			 */
			override protected function getDataDictCallback():void
			{   
				trace("ShowCmlImprecordsModule.getDataDictCallback");
				//向下拉列表框中添加一个"全部"子项
				var str:String  = LanguageManager.getInstance().getCommonLanguageMap("components")["all"] as String ;
				var allItem:Object = {key:"", text:str};
				var arrCol:ArrayCollection = ObjectUtil.copy(dataDictionaryCache[CmlImpRecordConsts.UPLOAD_STATUS]) as ArrayCollection;
				arrCol.addItemAt(allItem, 0);
				if(uploadStatusAll.length==0)
				{
					uploadStatusAll.addItem(arrCol[0]);
					uploadStatusAll.addItem(arrCol[1]);
					uploadStatusAll.addItem(arrCol[2]);
					uploadStatusAll.addItem(arrCol[3]);
					uploadStatusAll.addItem(arrCol[4]);
					uploadStatusAll.addItem(arrCol[5]);
				}
				//刷新列表
				(cmlSentFileUploadDataGrid.dataProvider as ListCollectionView).refresh();
			}
			
			/**
			 * 用数据字典转换列表数据
			 */
			
			override protected function transferDataDict(p_item:Object, p_column:DataGridColumn):String
			{
				switch(p_column.dataField)
				{
					case "operateStatus":
						currentDataDictPath = CmlImpRecordConsts.UPLOAD_STATUS;
						break;
				}
				return super.transferDataDict(p_item, p_column);
			}
			
			
			/**
			 * 点击查看导入的冠字号码详情
			 */
			public function showTransDetailInfo():void
			{
				trace("ShowCmlImprecordsModule.showTransDetailInfo");
				
				var vo:CmlImprecordsDetailVO = cmlSentFileUploadDataGrid.selectedItem as CmlImprecordsDetailVO; 
				CursorManager.setBusyCursor();
				//打开子窗口    
				var win:ShowCmlImpRecordForm = new ShowCmlImpRecordForm();
				
				_context.viewManager.addViewRoot(win);
				PopUpManager.showForm4Parsley(win);
				
				win.initData(vo.id);
			}
			
			
			protected function checkQueryCondition():Boolean
			{
				if( this.startTime.selectedDate==null )
				{
					AlertHandler.alert(LanguageManager.getInstance().getExceptionMessage("exceptionMessage.startTimeCannotBeNull"));
					return false;
				}
				if( this.endTime.selectedDate==null )
				{
					AlertHandler.alert(LanguageManager.getInstance().getExceptionMessage("exceptionMessage.endTimeCannotBeNull"));
					return false;
				}
				if( this.startTime.selectedDate.time > this.endTime.selectedDate.time )
				{
					AlertHandler.alert(LanguageManager.getInstance().getExceptionMessage("exceptionMessage.startTimeCannotBeGreaterThanEndTime"));
					return false;
				}
				return true;
			}
			
			protected function loadPage():void
			{
				if( checkQueryCondition()==false )
				{
					return ;
				}
				
				var oldFileNameString:String = StringUtil.trim(oldNameForCondition.text);
				if(oldFileNameString != "" && oldFileNameString.length < 5){
					AlertHandler.alert("输入的旧文件名过短：(至少5位)");
					return;
				}
				
				var parameter:Object = {};
				parameter.page = cmlImpRecordPage;
				
				var condition:Object = {};
				condition.startTime = startTime.text;
				condition.endTime = endTime.text;
				condition.termNum = termNum.text;
				condition.uploadStatus = uploadStatus.selectedValue;
				condition.pathCode = String(orgId.selectedItem.@pathCode);
				condition.oldNameForCondition = oldNameForCondition.text;
				condition.personForUpload = personForUpload.text;
				condition.flag=isLoopOrg.selected.toString();
				parameter.condition = condition;
				
				
				
				var msg:CmlImprecordMsg = new CmlImprecordMsg();
				msg.args["remoteMethod"]   = "getCmlImprecordsInfoPage";
				msg.args["methodPrameter"] = parameter;
				msg.args["resultHandler"]  = "ShowCmlImprecordsModule.getCmlImprecordsInfoPageResult";
				msg.args["errorHandler"]   = "ShowCmlImprecordsModule.getCmlImprecordsInfoPageError";
				cmlImpRecordsPM.sendCmlImprecordMsg(msg);
				
				//pm.loadPage();
			}
			
			[MessageHandler(selector="ShowCmlImprecordsModule.getCmlImprecordsInfoPageResult")]
			public function getCmlImprecordsInfoPageResult(p_msg:CmlImprecordMsg):void
			{
				cmlImpRecordPage = p_msg.result as Page;
			}
			
			[MessageHandler(selector="ShowCmlImprecordsModule.getCmlImprecordsInfoPageError")]
			public function getCmlImprecordsInfoPageError(p_msg:CmlImprecordMsg):void
			{
				
			}
			
			private function createRowNo(oItem:Object,iCol:int):String{
				var iIndex:int = ((cmlImpRecordPage.pageNo - 1) * cmlImpRecordPage.pageSize) + cmlImpRecordPage.result.getItemIndex(oItem) + 1;
				return String(iIndex);
			}
			
			public function initSelectDate():void
			{
				startTime.selectedDate = DateUtils.createDate(-6, 'yyyyMMdd');
				endTime.selectedDate = DateUtils.createDate(1, 'yyyyMMdd');
			}
			
			// 下载上传记录对应的FSN文件
			// o:LinkButton
			public function downloadFSN(o:Object):void{  
				trace("下载上传记录对应的FSN文件");
				
				var condition:Object = {};
				condition.fileName  = o.fileName;
				condition.id  = o.id;
				
				var msg:CmlImprecordMsg = new CmlImprecordMsg();
				msg.args["remoteMethod"]   = "downloadFSN";
				msg.args["methodPrameter"] = condition;
				msg.args["resultHandler"]  = "downloadFSNResult";
				msg.args["errorHandler"]   = "downloadFSNError";
				cmlImpRecordsPM.sendCmlImprecordMsg(msg);        
			} 
			
			[MessageHandler(selector="downloadFSNResult")]
			public function downloadFSNResult(p_msg:CmlImprecordMsg):void
			{
				trace("下载上传记录对应的FSN文件->从java返回结果");
				if(p_msg)
				{
					var fileName:String = p_msg.result.toString();
					if(fileName=="noData")
					{
						trace("下载上传记录对应的FSN文件，没有找到FSN文件");
						var alertMsg:String = "找不到FSN文件，文件已经删除或者检查配置项param.sent.fsnPath.fsnRootPath.fsnPath";
						AlertHandler.alert(alertMsg);
						return;
					}    
					else
					{
						//调用js打开连接下载
						var url : Object = encodeURIComponent(fileName);
						ExternalInterface.call("downloadFile",".ImportExcelServlet?fileName=" + url + "&type=downloadFsnFileForUpload");
					}
				}
			}
		]]>
	</fx:Script>
	
	<fx:Binding source="termNum.text" destination="pm.newVO.termId"/>
	<fx:Binding source="uploadStatus.selectedValue" destination="pm.newVO.operateStatus"/>
	<fx:Binding source="startTime.selectedDate" destination="pm.cond.startTime"/>
	<fx:Binding source="orgId.selectedValue" destination="pm.newVO.pathcode"/>
	<fx:Binding source="endTime.selectedDate" destination="pm.cond.endTime"/>
	
	<mx:VDividedBox width="100%" height="100%">
		
		<s:BorderContainer width="100%" height="100%" styleName="BorderContainer">
			
			<s:layout>
				<s:VerticalLayout gap="0" />
			</s:layout>
			
			<!-- 查询条件 --> 
			<grg:AdvancedSearchBar textAlign="center" styleName="SearchBar" borderVisible="false">
				
				<grg:layout>
					<s:VerticalLayout paddingTop="0" gap="0"/>
				</grg:layout>
				
				<mx:HBox width="100%" styleName="firHBoxStyle" height="30">
					
					<!--清分冠字号码导入详情-->
					<grg:TitleBar locale="titlemsg" width="50%" height="100%"/> 
					
					<mx:HBox width="100%" styleName="senHBoxStyle" height="30" verticalAlign="middle" paddingBottom="3" paddingTop="2">
						<mx:HBox styleName="searchStyle">
							<s:BorderContainer width="100%" height="25" backgroundAlpha="0" borderVisible="false">
								<s:layout>
									<s:HorizontalLayout 
										horizontalAlign="left"
										paddingLeft="0"
										gap="2"
										verticalAlign="middle"/>
								</s:layout>
								
								<!--是否循环遍历子机构：-->
								<grg:CheckBox id="isLoopOrg" selected="true">
									
								</grg:CheckBox>
								
								<!--所属机构：-->
								<grg:Label locale="uploadOrg"/>
								<grg:GRGComboBoxOrgTree id="orgId" defaultField="true" textAlign="left"
														width="100" treeHeight="300"	 />	
								<s:Spacer width="5" />								
								<!--上传时间：-->
								<grg:Label locale="sendTime"/>
								<userDefined:SuperDateField id="startTime" myEnabled="false" isShowTime="true"
													selectedDate="{DateUtils.createDate(-6, 'yyyyMMdd')}"
													selectableRange="{{rangeEnd:endTime.selectedDate}}"/>
								<grg:Label locale="to"/>
								<userDefined:SuperDateField id="endTime" myEnabled="false" isShowTime="true"
													selectedDate="{DateUtils.createDate(1, 'yyyyMMdd')}"
													selectableRange="{{rangeStart:startTime.selectedDate}}"/>
								<s:Spacer width="5" />
								
								
								
								<!--查询-->
								<grg:SearchButton id="btn_search"
												  locale="searchButton" menuId="{menu.id}" 
												  iconType="query" click="cmlImpRecordPage.pageNo=1;loadPage()" />
								<grg:ExpansionButton locale ="moreSearch" iconType="pulldown"/> 
								<!--重置-->
								<grg:ResetButton id="resetBtn" iconType="reset" locale="resetButton" 
												 resetControls="{[termNum,uploadStatus,orgId,oldNameForCondition,personForUpload]}" click="initSelectDate()"/>
							</s:BorderContainer>
						</mx:HBox> 
					</mx:HBox>
				</mx:HBox> 
				<s:BorderContainer width="100%" borderVisible="false" backgroundAlpha="0">
					<s:layout>
						<s:VerticalLayout gap="0" paddingBottom="0" />
					</s:layout>
					<s:BorderContainer width="100%" height="4" backgroundImage="@Embed(source='resources/theme/newui/more_search.png')" borderVisible="false">
					</s:BorderContainer>
					<s:BorderContainer  width="100%" height="100%" backgroundColor="#FAFCFF" borderVisible="false">
						<s:layout>
							<s:VerticalLayout   gap="0" />
						</s:layout>
						<mx:HBox width="100%" styleName="expHBoxStyle">  
							<s:BorderContainer width="100%" height="28" styleName="expBorderHBoxStyle">
								<s:layout>
									<s:HorizontalLayout horizontalAlign="right" gap="2" verticalAlign="middle" />
								</s:layout>
								
								<!--上传人员-->
								<grg:Label locale="personForUpload"/>
								<grg:TextInput id="personForUpload" textAlign="left" 
											   width="100" height="20"
											   styleName="TextInput" />
								<s:Spacer width="5" />
								
								<!--原文件名-->
								<grg:Label locale="oldNameForCondition"/>
								<grg:TextInput id="oldNameForCondition" textAlign="left" 
											   width="400" height="20"
											   styleName="TextInput" />
								<s:Spacer width="5" />
								
								
								<!--终端号：-->
								<grg:Label locale="termId"/>
								<grg:TextInput id="termNum" textAlign="left" restrict="0-9a-zA-Z\-" maxnum="10"
											   width="120" height="20"
											   styleName="TextInput" />
								<s:Spacer width="5" />
								
								<!--上传状态：-->
								<grg:Label locale="uploadStatus"/>
								<grg:ComboBox id="uploadStatus" dataProvider="{uploadStatusAll}" labelField="text"
											  valueField="key" width="98" requireSelection="true" selectedItem="全部"/>
								<s:Spacer width="5" />
								
								
							</s:BorderContainer>
						</mx:HBox>
					</s:BorderContainer>
					
				</s:BorderContainer>
				
				
			</grg:AdvancedSearchBar>
			<mx:HBox width="100%" height="100%" styleName="datagridHBoxStyle">
				<grg:DataGrid id="cmlSentFileUploadDataGrid" dataProvider="{cmlImpRecordPage.result}"
							  width="100%" height="100%"
							  textAlign="center" 
							  styleName="DataGrid"
							  borderVisible="true">
					<grg:columns>
						<grg:DataGridColumn locale="rowNo"  textAlign="center" labelFunction="createRowNo" sortable="false" width="50"/>
						<!--上传状态：-->
						<grg:DataGridColumn locale="uploadStatus" labelFunction="transferDataDict"
											 textAlign="center" dataField="operateStatus" width="100" resizable="false">
							<grg:itemRenderer>
								<fx:Component>
									<s:MXItemRenderer>
										<fx:Script>
											<![CDATA[
												
												
												[Bindable]
												private var uploadStatus:String;
												override public function set data(value:Object):void
												{
													super.data = value;
													uploadStatus=data.operateStatus;
													switch(uploadStatus){
														case "0":
															staColor.setStyle("color","#000000");
															uploadStatus="上传成功";
															break;
														case "1":
															staColor.setStyle("color","#ff0000");
															uploadStatus="上传未完成";
															break;
														case "2":
															staColor.setStyle("color","#000000");
															uploadStatus="解析成功";
															break;
														case "3":
															staColor.setStyle("color","#ff0000");
															uploadStatus="解析失败";
															break;
														case "4":
															staColor.setStyle("color","#ff0000");
															uploadStatus="部分解析";
															break;
														default:
															staColor.setStyle("color","#ff0000");
															uploadStatus="异常状态";
															break;
													}
												}
											]]>
										</fx:Script>
										<grg:Label text="{uploadStatus}" paddingTop="5" paddingLeft="5" width="100" id="staColor"   verticalCenter="-5" />
										
									</s:MXItemRenderer>
								</fx:Component>
							</grg:itemRenderer>
						</grg:DataGridColumn>
						<!--清分机编号-->
						<grg:DataGridColumn locale="tmlNum"     dataField="termId" textAlign="center" width="100" />
						<!--上传机构：-->
						<grg:DataGridColumn locale="uploadOrgNo"  dataField="orgName" textAlign="center" />
						<!--上传人员-->
						<grg:DataGridColumn locale="operaterId"	dataField ="operaterId" textAlign="center" width="100"/>
						<!--上传文件名-->
						<grg:DataGridColumn locale="fileName"    dataField="fileName" textAlign="left" minWidth="250" >
							<grg:itemRenderer>
								<fx:Component> 
									<mx:LinkButton label="{data.fileName}" color="blue"  textDecoration="underline"  click="outerDocument.downloadFSN(data)">
									</mx:LinkButton>
								</fx:Component> 
							</grg:itemRenderer>		
						</grg:DataGridColumn>
						<!-- 旧文件名 -->
						<grg:DataGridColumn locale="oldName"    dataField="oldFileName" textAlign="left" minWidth="150"/>
						<!--上传时间-->
						<grg:DataGridColumn locale="sendTime" width="170" dataField="operaterDate" labelFunction="{DataGridColumnUtils.formatYYYYMMDDHHMISS}" fontSize="14" />
						<!--上传记录数-->
						<grg:DataGridColumn locale="recordNum" dataField="seriaNum" textAlign="center"  width="100" />
						<!--操作-->
						<grg:DataGridColumn headerStyleName="centerDataGridHeader" locale="operations" textAlign="center" width="80" >
							<!--
							<grg:itemRenderer>
								<fx:Component>
									
									<s:MXDataGridItemRenderer>
										<fx:Script>
											<![CDATA[
												/**
												 * 是否继续上传
												 */
												[Bindable]
												private var isUpload:Boolean;
												
												override public function set data(value:Object):void
												{
													super.data = value;
													var num:int = data.seriaNum;
													if( num>0 )
													{
														isUpload = true;
													}
													else
													{
														isUpload = false;
													}
												}
											]]>
										</fx:Script>
										<grg:Button icon="@Embed('resources/theme/icon/sent/view.png')"  
													enabled="{isUpload}" click="outerDocument.showTransDetailInfo()" width="0" height="0"/>
									</s:MXDataGridItemRenderer>
									</fx:Component>
							</grg:itemRenderer>
							-->
										<!--
										<grg:itemRenderer>
											<fx:Component>
												<s:MXItemRenderer>
													<grg:GRGModuleButtonBar barType="icon" backgroundImage="@Embed('resources/theme/icon/sent/view.png')"  click="outerDocument.showTransDetailInfo()"/>
												</s:MXItemRenderer>
											</fx:Component>
										</grg:itemRenderer>
										-->
							
							<grg:itemRenderer>
								<fx:Component>
									<s:MXDataGridItemRenderer>
										<fx:Script>
											<![CDATA[
												/**
												 * 是否继续上传
												 */
												[Bindable]
												private var isUpload:Boolean;
												
												override public function set data(value:Object):void
												{
													super.data = value;
													var num:int = data.seriaNum;
													if( num>0 )
													{
														isUpload = true;
													}
													else
													{
														isUpload = false;
													}
												}
											]]>
										</fx:Script>
										<grg:GRGModuleButtonBar2 width="100%" height="16" align="center" >
											<!--查看交易信息-->
											<grg:Image id="showTransDetailBtn" privilegeCode="showTransDetailInfo"
													   source="@Embed('/resources/theme/images/icons/detail.png')" 
													   locale="searchPic" width="16" height="16" enabled="{isUpload}"
													   click="outerDocument.showTransDetailInfo()" />
										</grg:GRGModuleButtonBar2>
									</s:MXDataGridItemRenderer>
								</fx:Component>
							</grg:itemRenderer>	
							
						</grg:DataGridColumn>
					</grg:columns>
				</grg:DataGrid>
			</mx:HBox>
			<grg:PageNavigatorBar id="buttonPagingBar" bottom="0" 
								  pageVo="{cmlImpRecordPage}"
								  pagingFunction="{loadPage}"/>
		</s:BorderContainer>
	</mx:VDividedBox>
</grg:TabModule>
