<?xml version="1.0" encoding="utf-8"?>
<grg:TitleWindow xmlns:mx="library://ns.adobe.com/flex/mx" 
				 xmlns:fx="http://ns.adobe.com/mxml/2009" 
				 xmlns:s="library://ns.adobe.com/flex/spark" 
				 xmlns:grg="http://grg.grgbanking.com/platform/" 
				 xmlns:parsley="http://www.spicefactory.org/parsley"
				 xmlns:common="sent.common.*" 
				 dataDictionaryPaths="{[ 
				 CmlMgrConsts.FLOW_STAGE,
				 CmlMgrConsts.FLOW_STATUS,
				 CmlMgrConsts.NOTE_TYPE,
				 CmlSentInfoConsts.VERSION_NUM,
				 CmlSentInfoConsts.CURRENCY, 
				 CmlSentInfoConsts.MONEYDENOMINATION,
				 CmlSentInfoConsts.TERM_TYPE]}"
				 locale="showTailDetailInfo" 
				 titleKey="tailDetailInfoTitle"
				 xmlns:userDefined="platform.date.*"
				 layout="vertical" width="900" height="590"
				 >
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.core.UIComponent;
			import mx.utils.ObjectUtil;
			import mx.utils.StringUtil;
			import mx.utils.object_proxy;
			
			import platform.common.vo.Page;
			
			import sent.common.utils.DataGridColumnUtils;
			import sent.common.utils.DateUtils;
			import sent.common.utils.DrawCustomRect;
			import sent.common.utils.GraphicUtils;
			import sent.common.utils.ObjectUtils;
			import sent.common.utils.RectSprite;
			import sent.common.utils.StringUtils;
			import sent.transmgr.constants.CmlMgrConsts;
			import sent.transmgr.constants.CmlSentInfoConsts;
			import sent.transmgr.constants.TransInfoConsts;
			import sent.transmgr.message.CmlLoadNotesRecordMsg;
			import sent.transmgr.message.CmlNoteflowDetailInfoMsg;
			import sent.transmgr.message.CmlNoteflowInfoMsg;
			import sent.transmgr.message.CmlSentInfoMsg;
			import sent.transmgr.pm.CmlNoteflowDetailInfoPM;
			import sent.transmgr.pm.CmlNoteflowInfoPM;
			import sent.transmgr.pm.CmlSentInfoPM;
			import sent.transmgr.vo.CmlNoteflowInfoVO;
			import sent.transmgr.vo.CmlSentInfoVO;
			
			[Inject]
			[Bindable]
			public var cmlNoteflowInfoPM:CmlNoteflowInfoPM;
			
			[Inject]
			[Bindable]
			public var cmlNoteflowDetailInfoPM:CmlNoteflowDetailInfoPM;
			
			[Inject]
			[Bindable]
			public var cmlSentInfoPM:CmlSentInfoPM;
			
			
			[Bindable]
			private var barcodeFlowNum:String;	//流转条码
			private var seriaNo:String;	//冠字号码
			private var pathCode:String;	//机构码
			
			
			[Bindable] 
			private var cmlNoteflowInfoVO:CmlNoteflowInfoVO;
			
			/**
			 * 
			 */
			[Bindable]
			public var noteflowDetailPage:Page = new Page();
			
			/**
			 * 用于钞票流转列表
			 */
			[Bindable]
			public var cmlSentInfoPage:Page = new Page();
			[Bindable]
			public var sentPage:Page = new Page();
			
			//private var isDataDictLoad:Boolean = false;
			//private var isDetailCallBack:Boolean = false;
			
			[Bindable]
			private var hasFlowNum:Boolean = false;
			
			[Bindable]
			private var dataGridAC:ArrayCollection = new ArrayCollection();
			
			[Bindable]
			private var fromTableName:String;
			[Bindable]
			private var cmlSentInfoId:String;
			[Bindable]
			private var _cmlSentInfoVO:CmlSentInfoVO = new CmlSentInfoVO();
			private var drawCustomRect:DrawCustomRect = new DrawCustomRect();
			
			private var tranDateStr:String = "0000";
			
			/**
			 * 初始化数据
			 */ 
			public function initData(id:String, fromTableName:String, flowNum:String,queryCon:Object):void
			{
				trace("ShowCmlNoteflowInfo.initData");	
				
				this.barcodeFlowNum = flowNum;
				this.fromTableName = fromTableName;
				this.cmlSentInfoId = id;
				this.hasFlowNum = StringUtils.isNotBlank(flowNum);
				if(hasFlowNum){//流转码为0时，表示无流转
					hasFlowNum = (flowNum != "0");
				}
				if(!hasFlowNum){
					tab.getTabAt(2).visible=false;
				}
				this.seriaNo = queryCon.seriaNo;
				//this.pathCode = queryCon.pathCode;
				tailInfo_orgTree.selectedItem = queryCon.selectedItem;
				tailInfo_orgTree.selectedIndex = queryCon.selectedIndex;
				tailInfo_startTime.text = queryCon.startTime;
				tailInfo_endTime.text = queryCon.endTime;
				
				//getCmlSentInfoDetail();
				//loadTailInfoPage();
				
				/* if(StringUtils.isNotBlank(barcodeFlowNum)){
					getCmlNoteflowInfoByBarcodeFlowNum();
				} */
			}
			
			override protected function getDataDictCallback():void
			{
				trace("ShowCmlNoteflowInfo.getDataDictCallback");
				getCmlSentInfoDetail();
				
				ObjectUtils.dispatchAllPropertyChangeEvent(this.cmlNoteflowInfoVO);
				//ObjectUtils.dispatchAllPropertyChangeEvent(this.noteflowDetailPage.result);
				noteflowDetailPage.result.refresh();
				cmlSentInfoPage.result.refresh();
				
				//数据字典是否加载成功
				//isDataDictLoad = true;
				//if(isDetailCallBack){
					//drawFunc(sentPage,tranDetailInfoShow);
					//drawGraphics_tradeInfos(sentPage.result,tranDetailInfoShow);
				//}
				
			}
			
			////////////////////////////
			//冠字号详情，带冠字号图片
			public function getCmlSentInfoDetail():void
			{
				var parameter:Object = {};
				parameter.tableName = this.fromTableName;
				parameter.id = this.cmlSentInfoId;
				
				var cmlSentInfoMsg:CmlSentInfoMsg = new CmlSentInfoMsg();
				cmlSentInfoMsg.args["remoteMethod"]   = "getCmlSentInfosByIdFromTable";
				cmlSentInfoMsg.args["methodPrameter"] = parameter;
				cmlSentInfoMsg.args["resultHandler"]  = "ShowTailDetailInfo.getCmlSentInfosByIdFromTableResult";
				cmlSentInfoMsg.args["errorHandler"]   = "ShowTailDetailInfo.getCmlSentInfosByIdFromTableError";
				cmlSentInfoPM.sendCmlSentInfoMsg(cmlSentInfoMsg);
			}
			
			[MessageHandler(selector="ShowTailDetailInfo.getCmlSentInfosByIdFromTableResult")]
			public function getCmlSentInfoByIdFromTableResult(msg:CmlSentInfoMsg):void
			{
				_cmlSentInfoVO = msg.result as CmlSentInfoVO;
				tranDateStr = _cmlSentInfoVO.tranDate;
				if( _cmlSentInfoVO!=null )
				{
					//getCmlImpRecordDetail();
					//getTranDetail();
					dataGridAC.removeAll();
					dataGridAC.addItem(_cmlSentInfoVO);
				}
				else
				{
					//this._cmlImpRecordsVO = new CmlImpRecordsVO();
					//this._cmlImpRecordsVO.bankName = "找不到冠字号信息";
				}
			}
			
			////////////============冠字号对应的交易信息
			
			/* private function getTranDetail():void
			{
				var msg:CmlLoadNotesRecordMsg = new CmlLoadNotesRecordMsg();
				msg.args["remoteMethod"]   = "getCmlLoadNotesRecordDetailById";
				msg.args["methodPrameter"] = this._cmlSentInfoVO.tranId;
				msg.args["resultHandler"]  = "ShowTailDetailInfo.getCmlLoadNotesRecordDetailByIdResult";
				msg.args["errorHandler"]   = "ShowTailDetailInfo.getCmlLoadNotesRecordDetailByIdError";
				cmlLoadNotesRecordPM.sendCmlLoadNotesRecordMsg(msg);
			}
			
			[MessageHandler(selector="ShowTailDetailInfo.getCmlLoadNotesRecordDetailByIdResult")]
			public function getCmlLoadNotesRecordDetailByIdResult(msg:CmlLoadNotesRecordMsg):void
			{
				if( msg.result!=null )
				{
					cmlLoadNotesRecord = new ObjectProxy(msg.result);
				}
				else
				{
					this.cmlLoadNotesRecord = new ObjectProxy();
					this._cmlLoadNotesRecord.bankName = "找不到加钞交易信息";
				}
			} */
			
			//////////////////
			
			/////////////
			
			//查询交易信息列表
			public function loadTailInfoPage():void
			{
				try
				{
					/*  if( checkQueryCondition()==false )
					{
						return ;
					}  */
					
					var parameter:Object = {};
					
					sentPage.result.removeAll();
					parameter["page"] = sentPage;
					
					var condition:Object = {};
					//condition.pathCode = this.pathCode;
					condition.pathCode = String(tailInfo_orgTree.selectedItem.@pathCode);
					condition.startTime = tailInfo_startTime.text;
					condition.endTime = tailInfo_endTime.text;
					condition.seriaNo = this.seriaNo;
					//condition.isTranTail = "TranTail";//交易信息流转
					//condition.seriaNo = seriaNo.text;
					//condition.termId = termId.text;
					//condition.noteType = noteType.selectedValue;	
					
					parameter["condition"] = condition;					
					var msg:CmlSentInfoMsg = new CmlSentInfoMsg();
					msg.args["remoteMethod"]   = "getTranInfoPage";//"getCmlSentInfoPage";
					msg.args["methodPrameter"] = parameter;
					msg.args["resultHandler"]  = "TransBankNoteSeqAllModule.getCmlSentInfoPageResult_tail";
					msg.args["errorHandler"]   = "TransBankNoteSeqAllModule.getCmlSentInfoPageError_tail";
					cmlSentInfoPM.sendCmlSentInfoMsg(msg);
				}
				catch(e:Error)
				{
					trace(e);
				}
			}
			
			[MessageHandler(selector="TransBankNoteSeqAllModule.getCmlSentInfoPageResult_tail")]
			public function getCmlSentInfoPageResult(p_msg:CmlSentInfoMsg):void
			{
				trace("TransBankNoteSeqAllModule.getCmlSentInfoPageResult_tail");
				if(p_msg.result)
				{
					sentPage = p_msg.result as Page;
					
					//isDetailCallBack = true;
					//if(isDataDictLoad)//数据字典加载完成
						//drawFunc(sentPage,tranDetailInfoShow);
					drawCustomRect.groupComponent = tranDetailInfoShow;
					transferTermTypeDict(sentPage.result);
					drawCustomRect.drawGraphics_tradeInfos(sentPage.result,tranDateStr);
					//drawGraphics_tradeInfos(sentPage.result,tranDetailInfoShow);
				}
			}
			
			private function transferTermTypeDict(arrColl:ArrayCollection):void{
				for each(var itemObj:Object in arrColl){
					itemObj.tranTypeValue = this.getTextByKeyOnDataDictPath(itemObj.tranType, CmlSentInfoConsts.TERM_TYPE);
				}
			}
			
			/////////////
			
			private function getCmlNoteflowInfoByBarcodeFlowNum():void
			{
				trace("ShowCmlNoteflowInfo.getCmlNoteflowInfoByBarcodeFlowNumResult");
				var msg:CmlNoteflowInfoMsg = new CmlNoteflowInfoMsg();
				msg.args["remoteMethod"]   = "getCmlNoteflowInfoByBarcodeFlowNum";
				msg.args["methodPrameter"] = this.barcodeFlowNum;
				msg.args["resultHandler"]  = "ShowCmlNoteflowInfo.getCmlNoteflowInfoByBarcodeFlowNumResult";
				msg.args["errorHandler"]   = "ShowCmlNoteflowInfo.getCmlNoteflowInfoByBarcodeFlowNumError";
				cmlNoteflowInfoPM.sendCmlNoteflowInfoMsg(msg);
			}
			
			/**
			 * 
			 */
			[MessageHandler(selector="ShowCmlNoteflowInfo.getCmlNoteflowInfoByBarcodeFlowNumResult")]
			public function getCmlNoteflowInfoByBarcodeFlowNumResult(msg:CmlNoteflowInfoMsg):void
			{
				trace("ShowCmlNoteflowInfo.getCmlNoteflowInfoByBarcodeFlowNumResult");
				this.cmlNoteflowInfoVO = msg.result as CmlNoteflowInfoVO;
				if( this.cmlNoteflowInfoVO!=null )
				{
					getCmlNoteflowDetailInfosPageByFlowNum();
					//getCmlSentInfosPageByFlowNum();
				}
			}
			
			/////////////
			
			private function getCmlNoteflowDetailInfosPageByFlowNum():void
			{
				trace("ShowCmlNoteflowInfo.getCmlNoteflowDetailInfosPageByFlowNum");	
				
				noteflowDetailPage.result.removeAll();
				
				var parameter:Object = {};
				parameter["page"] = noteflowDetailPage;
				
				var condition:Object = {};
				condition.barcodeFlowNum = this.barcodeFlowNum;
				parameter["condition"] = condition;
				
				var cmlNoteflowDetailInfoMsg:CmlNoteflowDetailInfoMsg = new CmlNoteflowDetailInfoMsg();
				cmlNoteflowDetailInfoMsg.args["remoteMethod"]   = "getCmlNoteflowDetailInfosPageByFlowNum";
				cmlNoteflowDetailInfoMsg.args["methodPrameter"] = parameter;
				cmlNoteflowDetailInfoMsg.args["resultHandler"]  = "ShowCmlNoteflowInfo.getCmlNoteflowDetailInfosPageByFlowNumResult";
				cmlNoteflowDetailInfoMsg.args["errorHandler"]   = "ShowCmlNoteflowInfo.getCmlNoteflowDetailInfosPageByFlowNumError";
				cmlNoteflowDetailInfoPM.sendCmlNoteflowDetailInfoMsg(cmlNoteflowDetailInfoMsg);
			}
			
			/**
			 * 
			 */
			[MessageHandler(selector="ShowCmlNoteflowInfo.getCmlNoteflowDetailInfosPageByFlowNumResult")]
			public function getCmlNoteflowDetailInfosPageByFlowNumResult(p_msg:CmlNoteflowDetailInfoMsg):void
			{
				trace("ShowCmlNoteflowInfo.getCmlNoteflowDetailInfosPageByFlowNumResult");	
				noteflowDetailPage = p_msg.result as Page;
				/* isDetailCallBack = true;
				if(isDataDictLoad) */ //数据字典加载完成
					//draw();
				
				drawCustomRect.groupComponent = cmlDetailInfo;
				transferNoteflowDict(noteflowDetailPage.result);
				drawCustomRect.drawGraphics_flowInfos(noteflowDetailPage.result,"0000");
			}
			private function transferNoteflowDict(arrColl:ArrayCollection):void{
				for each(var itemObj:Object in arrColl){
					itemObj.flowStageValue = this.getTextByKeyOnDataDictPath(itemObj.flowStage, CmlMgrConsts.FLOW_STAGE);
					itemObj.statusValue = this.getTextByKeyOnDataDictPath(itemObj.status, CmlMgrConsts.FLOW_STATUS);
					
				}
			}
			
			////////////
			
			/**
			 * 根据业务流转号码获取冠字号码分页
			 */ 
			private function getCmlSentInfosPageByFlowNum():void
			{
				trace("ShowCmlNoteflowInfo.getCmlSentInfosPageByFlowNum");	
				
				cmlSentInfoPage.result.removeAll();
				
				var parameter:Object = {};
				parameter["page"] = cmlSentInfoPage;
				
				var condition:Object = {};
				condition.monthDay = StringUtils.substring(this.cmlNoteflowInfoVO.clearingDate, 4, 8);		// 取MMDD
				condition.barcodeFlowNum = this.barcodeFlowNum;
				parameter["condition"] = condition;
				
				var cmlSentInfoMsg:CmlSentInfoMsg = new CmlSentInfoMsg();
				cmlSentInfoMsg.args["remoteMethod"]   = "getCmlSentInfosPageByFlowNum";
				cmlSentInfoMsg.args["methodPrameter"] = parameter;
				cmlSentInfoMsg.args["resultHandler"]  = "ShowCmlNoteflowInfo.getCmlSentInfosPageByFlowNumResult";
				cmlSentInfoMsg.args["errorHandler"]   = "ShowCmlNoteflowInfo.getCmlSentInfosPageByFlowNumError";
				cmlSentInfoPM.sendCmlSentInfoMsg(cmlSentInfoMsg);
			}
			
			/**
			 * 根据业务流转号码获取冠字号码分页 成功处理回调
			 */
			[MessageHandler(selector="ShowCmlNoteflowInfo.getCmlSentInfosPageByFlowNumResult")]
			public function getCmlSentInfosByIdFromTableResult(p_msg:CmlSentInfoMsg):void
			{
				trace("ShowCmlNoteflowInfo.getCmlSentInfosPageByFlowNumResult");			
				if( p_msg.result!=null )
				{					
					cmlSentInfoPage = p_msg.result as Page;
				}
			}
			
			/**显示数据字典转换出来的值**/
			override protected function transferDataDict(p_item:Object, column:DataGridColumn):String
			{
				if(column.dataField == "tranType")
				{
					currentDataDictPath = CmlSentInfoConsts.TERM_TYPE;
				} 
				else if(column.dataField == "noteType")
				{
					currentDataDictPath = CmlMgrConsts.NOTE_TYPE;
				}
				else if(column.dataField == "currency")
				{
					currentDataDictPath = CmlSentInfoConsts.CURRENCY;
				}
				return super.transferDataDict(p_item, column);
				/* else if(column.dataField == "noteType")
				{
				currentDataDictPath = CmlSentInfoConsts.NOTE_TYPE;
				}
				else if(column.dataField == "currency")
				{
				currentDataDictPath = CmlSentInfoConsts.CURRENCY;
				}
				else if(column.dataField=="denomination")
				{
				currentDataDictPath = CmlSentInfoConsts.MONEYDENOMINATION;
				}
				else if(column.dataField == "noteFlag")
				{
				currentDataDictPath =TransInfoConsts.NOTE_FLAG;
				}
				else if(column.dataField == "noteType")
				{
				currentDataDictPath = TransInfoConsts.NOTE_TYPE;
				}
				else if(column.dataField == "currency")//币种
				{
				currentDataDictPath = CmlSentInfoConsts.CURRENCY;
				}
				else if(column.dataField =="versionNum")
				{
				currentDataDictPath = CmlSentInfoConsts.VERSION_NUM;
				} */
			}
			
			public function transformFlowStage(p_item:Object, column:DataGridColumn):String
			{
				currentDataDictPath = CmlMgrConsts.FLOW_STAGE;
				return super.transferDataDict(p_item, column);
			}
			
			
			public function showCashATMCardNum(p_item:Object, column:DataGridColumn):String
			{
				if( p_item.barcode2!=null && p_item.barcode2!="" )
				{
					return p_item.barcode2
				}
				else
				{
					return p_item.barcode1;
				}
			}
			
			public function formatOperDate(p_item:Object, column:DataGridColumn):String
			{
				return DateUtils.formatYYYYMMDDHHMISS(p_item.date);
			}
			//交易类型		
			public function transformTranType(item:Object, column:DataGridColumn):String
			{
				return this.getTextByKeyOnDataDictPath(item.tranType, CmlSentInfoConsts.TERM_TYPE);	//getFlowStatusLabelByKey(item.status);
			}
			//
			public function transformFlowStatus(item:Object, column:DataGridColumn):String
			{
				return this.getTextByKeyOnDataDictPath(item.status, CmlMgrConsts.FLOW_STATUS);	//getFlowStatusLabelByKey(item.status);
			}
			
			/**
			 * 获取钞票类型颜色
			 */  
			public function getNoteTypeColor(noteType:String):String
			{
				switch(noteType)
				{
					case "1":   return "#00aa00";	//绿色代表真抄
					case "0":   return "#ff0000";	//红色代表可疑抄
					case "201": return "#0000aa";	//蓝色代表黑名单
					case "3":   return "#ff9900";	//橘黄色代表重号
				}
				return "#00aa00";		//绿色代表真抄
			}
			
			/**
			 *选项卡的切换
			 */
			private function changeTab():void
			{
				trace("TranAbnoinfoBlackModule.changeTab");
				var tabIndex:int=NavigatorContent(tab.selectedChild).tabIndex;
				switch(tabIndex)
				{
					case 0:
						trace("冠字号详情");
						
						break;
					case 1:
						trace("交易详细信息");
						loadTailInfoPage();
						break;
					case 2:
						trace("流转详细信息");
						if(StringUtils.isNotBlank(barcodeFlowNum)){
							getCmlNoteflowInfoByBarcodeFlowNum();
						}
						break;
				}
			}
			
			private function createRowNo1(oItem:Object,iCol:int):String{
				
				return String(1);
			}
			
			private function createRowNo(oItem:Object,iCol:int):String{
				var iIndex:int = ((sentPage.pageNo - 1) * sentPage.pageSize) + sentPage.result.getItemIndex(oItem) + 1;
				return String(iIndex);
			}
			public function initSelectDate():void
			{
				tailInfo_startTime.selectedDate = DateUtils.createDate(-7, 'yyyyMMdd');
				tailInfo_endTime.selectedDate = DateUtils.createDate(0, 'yyyyMMdd');
			}
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<parsley:Configure reuse="false"/>
	</fx:Declarations>
	<!--选项卡-->
	<mx:TabNavigator change="changeTab()" id="tab" width="100%" height="100%" creationPolicy="all" 
					 borderVisible="false" tabStyleName="tabStyle">
		<!-- 冠字号详情 -->
		<grg:NavigatorContent width="100%" height="100%" id="navSerialNODetailInfo" locale="serailNODetailInfo" creationPolicy="all" tabIndex="0">
			<s:VGroup gap="25" width="100%" height="100%">
			<grg:RoundCornerContainer width="100%"  height="45%"  locale="serailNOBasicInfo">
				
				<s:HGroup width="100%" paddingLeft="50">
					<grg:Form>
						<grg:FormItem width="100%" locale="seriaNo">
							<grg:TextInput text="{_cmlSentInfoVO.seriaNo}" width="200" editable="false" />
						</grg:FormItem>
						<grg:FormItem width="100%" locale="noteType">
							<grg:TextInput text="{this.getTextByKeyOnDataDictPath(_cmlSentInfoVO.noteType,CmlMgrConsts.NOTE_TYPE)}" width="200" editable="false" />
						</grg:FormItem>
						<grg:FormItem width="100%" locale="denomination">
							<grg:TextInput text="{this.getTextByKeyOnDataDictPath(_cmlSentInfoVO.denomination,CmlSentInfoConsts.MONEYDENOMINATION)}" width="200" editable="false" />
						</grg:FormItem>
						<!--<grg:FormItem width="100%" locale="currency">
							<grg:TextInput text="{this.getTextByKeyOnDataDictPath(_cmlSentInfoVO.currency, CmlSentInfoConsts.CURRENCY)}" width="200" editable="false" />
						</grg:FormItem>-->
						<grg:FormItem width="100%" locale="cnyVersion">
							<grg:TextInput text="{this.getTextByKeyOnDataDictPath(_cmlSentInfoVO.versionNum, CmlSentInfoConsts.VERSION_NUM)}" width="200" editable="false" />
						</grg:FormItem>
						<grg:FormItem width="100%" locale="machinesno">
							<grg:TextInput text="{_cmlSentInfoVO.machinesno}" width="200" editable="false" />
						</grg:FormItem>
						<grg:FormItem width="100%" locale="l_latticePointName">
							<grg:TextInput text="{_cmlSentInfoVO.orgName}" width="200" editable="false" />
						</grg:FormItem>
					</grg:Form>
					<grg:Form>
						<grg:FormItem width="100%" locale="tranDate">
							<grg:TextInput text="{DateUtils.formatYYYYMMDDHHMISS(_cmlSentInfoVO.tranDate)}" width="200" editable="false" />
						</grg:FormItem>
						<grg:FormItem width="100%" locale="l_orgName">
							<grg:TextInput text="{_cmlSentInfoVO.orgName}" width="200" editable="false" />
						</grg:FormItem>
						<grg:FormItem width="100%" locale="l_operType">
							<grg:TextInput text="{this.getTextByKeyOnDataDictPath(_cmlSentInfoVO.termType, CmlSentInfoConsts.TERM_TYPE)}" width="200" editable="false" />
						</grg:FormItem>
						<grg:FormItem width="100%" locale="l_businessType">
							<grg:TextInput text="{_cmlSentInfoVO.businessTypeDesc}" width="200" editable="false" />
						</grg:FormItem>
						<grg:FormItem width="100%" locale="l_bankName">
							<grg:TextInput text="{_cmlSentInfoVO.currentBank}" width="200" editable="false" />
						</grg:FormItem>
						<grg:FormItem width="100%" locale="orgNameFinanceCode">
							<grg:TextInput text="{_cmlSentInfoVO.orgNameFinanceCode}" width="200" editable="false" />
						</grg:FormItem>
					</grg:Form>
				</s:HGroup> 
			</grg:RoundCornerContainer>
					
				<!--<s:HGroup width="100%" paddingLeft="50">
						<grg:FormItem width="100%" locale="urlName">
							<s:BorderContainer width="322" height="34">
								<grg:Image id="mySerialImage"  verticalAlign="middle" horizontalAlign="center"
										   source="{_cmlSentInfoVO.imageArr}" width="320" height="32" />	
							</s:BorderContainer>
						</grg:FormItem>
				</s:HGroup>-->				
							
				<grg:RoundCornerContainer width="100%" height="50%" locale="serailNODetailInfo2">				
				<grg:DataGrid horizontalScrollPolicy="on" id="cmlSentInfoDataGrid" dataProvider="{dataGridAC}" width="100%" height="100%"  textAlign="center" styleName="DataGrid">
					<grg:columns>
						
						<grg:DataGridColumn locale="columnNo"  textAlign="center" labelFunction="createRowNo1" sortable="false" width="50"/>
						<grg:DataGridColumn locale="seriaNo" width="100" textAlign="center" resizable="false">
							<grg:itemRenderer>
								<fx:Component>
									<s:MXDataGridItemRenderer>
										<s:layout>
											<s:HorizontalLayout horizontalAlign="center" />
										</s:layout>
										
										<fx:Script>
											<![CDATA[
												/* [Bindable]
												override public function set data(value:Object):void
												{
												super.data = value;
												serNoColor.setStyle("color", this.parentDocument.getNoteTypeColor(data.noteType)); 
												} */
											]]>
										</fx:Script>
										
										<grg:Label id="serNoColor" paddingTop="5" fontFamily="Verdana" width="90" text="{data.seriaNo}" textAlign="center"/>
									</s:MXDataGridItemRenderer>
								</fx:Component>
							</grg:itemRenderer>
						</grg:DataGridColumn>
						<grg:DataGridColumn  locale="urlName" id="picName" textAlign="center"  width="320" resizable="false">
							<grg:itemRenderer>
								<fx:Component>
									<s:MXDataGridItemRenderer>
										<s:layout>
											<s:HorizontalLayout horizontalAlign="center" />
										</s:layout>
										<fx:Script>
											<![CDATA[																			
												override public function set data(value:Object):void
												{
													super.data = value;
													myImage.source = data.imageArr;
													myImage.width = 320;
													myImage.height = 32;									
												} 
											]]>
										</fx:Script>
										<grg:Image id="myImage"  horizontalAlign="center" verticalAlign="middle" />									
									</s:MXDataGridItemRenderer>
								</fx:Component>
							</grg:itemRenderer>
						</grg:DataGridColumn>
						<grg:DataGridColumn locale="noteType"     dataField="noteType"     width="80" labelFunction="{transferDataDict}"/>
						<grg:DataGridColumn locale="denomination" dataField="denomination" width="50" />
						<grg:DataGridColumn locale="currency"     dataField="currency"     width="50" labelFunction="{transferDataDict}"/>
						<grg:DataGridColumn locale="tranDate"     dataField="tranDate"     width="100" labelFunction="{DataGridColumnUtils.formatYYYYMMDDHHMISS}"/>
					</grg:columns>
				</grg:DataGrid>					
				</grg:RoundCornerContainer>
			</s:VGroup>
				<!--<s:Group width="100%" height="100%">
					<s:layout>
						<s:VerticalLayout gap="0" paddingTop="0" />
					</s:layout>
					<grg:DataGrid id="cmlSentInfoDataGrid" dataProvider="{dataGridAC}" width="100%" height="100%"  textAlign="center" styleName="DataGrid">
						<grg:columns>
							
							<grg:DataGridColumn locale="columnNo"  textAlign="center" labelFunction="createRowNo1" sortable="false" width="50"/>
							<grg:DataGridColumn locale="seriaNo" width="100" textAlign="center" resizable="false">
								<grg:itemRenderer>
									<fx:Component>
										<s:MXDataGridItemRenderer>
											<s:layout>
												<s:HorizontalLayout horizontalAlign="center" />
											</s:layout>
											
											<fx:Script>
											<![CDATA[
											/* [Bindable]
											override public function set data(value:Object):void
											{
											super.data = value;
											serNoColor.setStyle("color", this.parentDocument.getNoteTypeColor(data.noteType)); 
											} */
											]]>
											</fx:Script>
											
											<grg:Label id="serNoColor" paddingTop="5" fontFamily="Verdana" width="90" text="{data.seriaNo}" textAlign="center"/>
										</s:MXDataGridItemRenderer>
									</fx:Component>
								</grg:itemRenderer>
							</grg:DataGridColumn>
							<grg:DataGridColumn  locale="urlName" id="picName" textAlign="center"  width="320" resizable="false">
								<grg:itemRenderer>
									<fx:Component>
										<s:MXDataGridItemRenderer>
											<s:layout>
												<s:HorizontalLayout horizontalAlign="center" />
											</s:layout>
											<fx:Script>
												<![CDATA[																			
													override public function set data(value:Object):void
													{
														super.data = value;
														myImage.source = data.imageArr;
														myImage.width = 320;
														myImage.height = 32;									
													} 
												]]>
											</fx:Script>
											<grg:Image id="myImage"  horizontalAlign="center" verticalAlign="middle" />									
										</s:MXDataGridItemRenderer>
									</fx:Component>
								</grg:itemRenderer>
							</grg:DataGridColumn>
							<grg:DataGridColumn locale="noteType"     dataField="noteType"     width="80" labelFunction="{transferDataDict}"/>
							<grg:DataGridColumn locale="denomination" dataField="denomination" width="50" />
							<grg:DataGridColumn locale="currency"     dataField="currency"     width="50" labelFunction="{transferDataDict}"/>
							<grg:DataGridColumn locale="tranDate"     dataField="tranDate"     width="100" labelFunction="{DataGridColumnUtils.formatYYYYMMDDHHMISS}"/>
						</grg:columns>
					</grg:DataGrid>
				</s:Group>-->
			
		</grg:NavigatorContent>
		<!--交易详情-->	
		<grg:NavigatorContent width="100%" height="100%" id="navTainDetailInfo" locale="tainDetailInfo" creationPolicy="all" tabIndex="1">
			<grg:layout>
				<s:VerticalLayout/>
			</grg:layout>
			<grg:RoundCornerContainer width="100%" height="170" id="tranDetailInfo">
				<grg:layout>
					<s:VerticalLayout/>
				</grg:layout>
				<mx:HBox height="30"  width="100%" styleName="senHBoxStyle" paddingTop="2" paddingBottom="3" horizontalAlign="right">
					<mx:HBox styleName="searchStyle" height="25">
						
						<!-- 所属机构： -->
						<grg:Label locale="orgIdColon"/>
						<grg:GRGComboBoxOrgTree id="tailInfo_orgTree" defaultField="true" width="120" textAlign="left" treeHeight="300" />	
						<s:Spacer width="5" />
						
						<!--交易时间：-->
						<grg:Label locale="tranTimeColon" />
						<userDefined:SuperDateField id="tailInfo_startTime"  myEnabled="false"
											selectedDate="{DateUtils.createDate(-7)}"
											selectableRange="{{rangeEnd:tailInfo_endTime.selectedDate}}" />
						<grg:Label locale="to"/>
						<userDefined:SuperDateField id="tailInfo_endTime"  myEnabled="false" 
											selectedDate="{DateUtils.createDate(0)}"
											selectableRange="{{rangeStart:tailInfo_startTime.selectedDate}}" />
						<s:Spacer width="5" />
						
						
						<grg:SearchButton id="tailInfo__searchBtn" locale="searchButton"
										  iconType="query" click="sentPage.pageNo=1;loadTailInfoPage()"/>
						<!--<grg:ExpansionButton locale="moreSearch" iconType="pulldown"/> -->					
						<grg:ResetButton id="tailInfo_resetBtn" locale="resetButton" iconType="reset" click="initSelectDate()"
										 resetControls="{[ tailInfo_orgTree ]}"/>
					</mx:HBox>
				</mx:HBox>
				
				<s:VGroup width="100%" height="100%" gap="0" paddingTop="0" paddingBottom="0">
					<grg:DataGrid id="tranDetailDataGrid" dataProvider="{sentPage.result}"
								  width="100%" height="100%" textAlign="center" styleName="DataGrid"
								  verticalScrollPolicy="auto" paddingTop="0" paddingBottom="0">
						<grg:columns>
							<!-- 序号 -->
							<grg:DataGridColumn locale="columnNo"  textAlign="center" labelFunction="createRowNo" sortable="false" width="40"/>
							
							<!--交易类型-->
							<grg:DataGridColumn locale="l_tranType" dataField="tranType" labelFunction="{transformTranType}"/>
							<!--交易时间-->
							<grg:DataGridColumn locale="l_tranDate" labelFunction="{DataGridColumnUtils.formatYYYYMMDDHHMISS}"
												fontSize="14" width="170" dataField="tranDate"/>
							<!--终端号
							<grg:DataGridColumn locale="l_termCode" dataField="termCode" />-->
							<!--机构名称-->
							<grg:DataGridColumn locale="l_orgName" dataField="orgName" />
							<!--操作员-->
							<grg:DataGridColumn locale="l_operatorCode" dataField="operatorCode" />
							<!--冠字号数-->
							<grg:DataGridColumn locale="l_tranCount" dataField="tranCount" />
							<!--交易金额-->
							<grg:DataGridColumn locale="l_tranAmount" dataField="tranAmount" />
							<!--业务类型
							<grg:DataGridColumn locale="l_operType" dataField="operType" />-->
						</grg:columns>
					</grg:DataGrid>
					<grg:PageNavigatorBar id="pagebarTran" bottom="0" pageVo="{sentPage}" pagingFunction="{loadTailInfoPage}"/>
				</s:VGroup>
			</grg:RoundCornerContainer>	
			
			<mx:Spacer height="5" />
			
			<!-- 交易详情展示 -->
			<grg:RoundCornerContainer locale="tranDetailInfoShowLocale" id="flowInfoShowId" width="100%" height="100%">
				<s:Scroller width="100%" height="100%" verticalScrollPolicy="auto">
					<s:VGroup paddingLeft="20">
						<s:VGroup id="tranDetailInfoShow" width="100%" gap="0" paddingTop="0" paddingLeft="70">
							
						</s:VGroup>
					</s:VGroup>
				</s:Scroller>
			</grg:RoundCornerContainer>
		</grg:NavigatorContent>
	
		<!--流转详情-->	
		<grg:NavigatorContent width="100%" height="100%" id="navFlowDetailInfo" locale="noteflowDetail"
							  creationPolicy="all" tabIndex="2" >
			<grg:layout>
				<s:VerticalLayout/>
			</grg:layout>
			<!-- 流转基本信息 -->
			<grg:RoundCornerContainer locale="noteflowBasicInfo" width="100%" id="noteflowBasicInfo">
				<s:HGroup width="100%" paddingLeft="50">
					<grg:Form>
						<!--流转号码：-->
						<grg:FormItem width="100%" locale="barcodeFlowNumColon">
							<grg:TextInput text="{cmlNoteflowInfoVO.tdBarcodeFlownum}" width="200" editable="false" />
						</grg:FormItem>
						<!--交易流水：-->
						<grg:FormItem width="100%" locale="transSeqNumColon">
							<grg:TextInput text="{cmlNoteflowInfoVO.journalNo}" width="200" editable="false" />
						</grg:FormItem>
						<!--所处阶段：-->
						<grg:FormItem width="100%" locale="flowStageColon">
							<grg:TextInput text="{this.getTextByKeyOnDataDictPath(cmlNoteflowInfoVO.flowStage, CmlMgrConsts.FLOW_STAGE)}" width="200" editable="false" />
						</grg:FormItem>
					</grg:Form>
					<grg:Form>
						<!--设备编号：-->
						<grg:FormItem width="100%" locale="deviceNumColon">
							<grg:TextInput text="{cmlNoteflowInfoVO.termId}" width="200" editable="false" />
						</grg:FormItem>
						<!--清分日期：-->
						<grg:FormItem width="100%" locale="clearingDateColon">
							<grg:TextInput text="{DateUtils.formatYYYYMMDDHHMISS(cmlNoteflowInfoVO.clearingDate)}" width="200" editable="false" />
						</grg:FormItem>
						<!--钞票总额：-->
						<grg:FormItem width="100%" locale="noteTotalColon">
							<grg:TextInput text="{cmlNoteflowInfoVO.statisAmt}" width="200" editable="false" />
						</grg:FormItem>
					</grg:Form>
				</s:HGroup>
			</grg:RoundCornerContainer>
			
			<mx:Spacer height="7" />
			
			<!-- 流转详细信息 -->
			<grg:RoundCornerContainer locale="noteflowDetail" width="100%" height="138" id="noteflowDetailInfo">
				<s:VGroup width="100%" height="100%" gap="0" paddingTop="0">
					<grg:DataGrid id="noteflowDetailDataGrid" dataProvider="{noteflowDetailPage.result}" 
								  width="100%" height="100%" textAlign="center" styleName="DataGrid"
								  verticalScrollPolicy="auto">
						<grg:columns>
							<!--流转号码-->
							<grg:DataGridColumn locale="barcodeFlowNum"           dataField="barcodeFlowNum" width="55" />
							<!--所处阶段-->
							<grg:DataGridColumn locale="flowStage"                dataField="flowStage"      width="55" labelFunction="{transformFlowStage}" />
							<!--钞箱号/ATM号/卡号-->
							<grg:DataGridColumn locale="cashNumOrATMNumOrCardNum"                            width="70" labelFunction="{showCashATMCardNum}" />
							<!--操作人-->
							<grg:DataGridColumn locale="operator"                 dataField="operator"       width="40" />
							<!--操作时间-->
							<grg:DataGridColumn locale="operDate"                 dataField="date"           width="55" labelFunction="{formatOperDate}" />
							<!--流转状态-->
							<grg:DataGridColumn locale="flowStatus"               dataField="status"         width="55" labelFunction="{transformFlowStatus}" />
						</grg:columns>
					</grg:DataGrid>
					<grg:PageNavigatorBar id="pagebar1" bottom="0" pageVo="{noteflowDetailPage}" pagingFunction="{getCmlNoteflowDetailInfosPageByFlowNum}"/>
				</s:VGroup>
			</grg:RoundCornerContainer>	
			
			<mx:Spacer height="5" />
			
			<!-- 流转详细信息展示 -->
			<grg:RoundCornerContainer locale="flowInfoShow" id="cmlSeqInfo" width="100%" height="100%">
				<s:Scroller width="100%" height="100%" verticalScrollPolicy="auto">
					<s:VGroup paddingLeft="20">
						<s:VGroup id="cmlDetailInfo" width="100%" gap="0" paddingTop="0" paddingLeft="70">
							
						</s:VGroup>
					</s:VGroup>
				</s:Scroller>
			</grg:RoundCornerContainer>
		</grg:NavigatorContent>
	</mx:TabNavigator>
	
	<s:HGroup width="100%" gap="6" paddingBottom="7" horizontalAlign="center" verticalAlign="middle">
		<grg:Button locale="cancelButton" iconVisible="false" click="cancel()"/>
	</s:HGroup>
	
</grg:TitleWindow>
