<?xml version="1.0" encoding="utf-8"?>
<grg:TabModule xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:parsley="http://www.spicefactory.org/parsley"
			   xmlns:grg="http://grg.grgbanking.com/platform/"
			   locale="cmlNoteflowInfoSituationReportModule"
			   xmlns:userDefined="platform.date.*"
			   layout="vertical" width="100%" height="100%"
			   creationComplete="creationCompleteHandler(event)"
			   >
	
	<fx:Script>
		<![CDATA[
			
			//========================
			//清分量统计报表
			//========================
			
			import mx.collections.ArrayCollection;
			import mx.collections.ListCollectionView;
			import mx.controls.Alert;
			import mx.core.UIComponent;
			import mx.events.FlexEvent;
			import mx.events.ValidationResultEvent;
			import mx.validators.Validator;
			
			import platform.common.manager.LanguageManager;
			import platform.common.vo.Page;
			import platform.dataDict.DataDictConfig;
			import platform.common.manager.AlertHandler;
			
			import sent.common.utils.DateUtils;
			import sent.transmgr.config.CmlNoteflowDetailInfoConfig;
			import sent.transmgr.config.CmlNoteflowInfoMgrConfig;
			import sent.transmgr.config.CmlSentInfoConfig;
			import sent.transmgr.message.CmlNoteflowInfoMgrMsg;
			import sent.transmgr.pm.CmlNoteflowInfoMgrPM;
			import sent.transmgr.vo.CmlNoteflowInfoMgrVO;
			
			
			
			
			
			[Bindable]
			public var gridData:ArrayCollection = new ArrayCollection();
			
			[Bindable]
			public var formData:Object = new Object() ;
			
			
			[Inject]
			[Bindable]
			public var cmlNoteflowInfoMgrPM:CmlNoteflowInfoMgrPM;
			
			private var langMgr:LanguageManager = LanguageManager.getInstance();		
			
			
			/**
			 * 
			 */
			override public function dispose():void
			{
				trace("CmlNoteflowInfoSituationReportModule.dispose");
			}
			
			/**
			 * 
			 */
			override protected function getDataDictCallback():void
			{
				trace("CmlNoteflowInfoSituationReportModule.getDataDictCallback==============================");
				(dataGrid.dataProvider as ListCollectionView).refresh();
			}
			
			/**
			 * 获取页结果集
			 */		
			override protected function viewUpdateComplete():void
			{
				trace("CmlNoteflowInfoSituationReportModule.viewUpdateComplete");
				cmlNoteflowInfoMgrPM.cmlNoteflowInfo = new CmlNoteflowInfoMgrVO();
			}	
			
			/**
			 * 
			 */
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				trace("CmlNoteflowInfoSituationReportModule.creationCompleteHandler");
			}
			
			
			
			public function formatClearingDate(p_item:Object, column:DataGridColumn):String
			{
				trace("CmlNoteflowInfoSituationReportModule.formatClearingDate");
				var clearingDate:String = p_item.clearingDate;
				return DateUtils.formatYYYYMMDD(clearingDate);
			}
			
			
			protected function searchButtonClickHandler(event:MouseEvent):void
			{
				trace("CmlNoteflowInfoSituationReportModule.searchButtonClickHandler");
				cmlNoteflowInfoMgrPM.page = new Page();
				loadPage();
			}
			
			/**
			 * 
			 */
			private function validateQueryCondition():Boolean
			{
				trace("CmlNoteflowInfoSituationReportModule.validateQueryCondition");
				if(!checkQueryCondition()){
					return false;
				}
				var errors:Array = Validator.validateAll([validateStartTime, validateEndTime]);
				if( errors.length>0 )
				{
					var error:ValidationResultEvent = errors[0] as ValidationResultEvent;
					var validator:Validator = error.target as Validator;
					var ui:UIComponent = validator.source as UIComponent;
					ui.setFocus();
					return false;
				}
				return true;
			}
			
			protected function checkQueryCondition():Boolean
			{
				if( this.startTime.selectedDate==null )
				{
					AlertHandler.alert(LanguageManager.getInstance().getExceptionMessage("exceptionMessage.startTimeCannotBeNull"));
					return false;
				}
				if( this.endTime.selectedDate==null )
				{
					AlertHandler.alert(LanguageManager.getInstance().getExceptionMessage("exceptionMessage.endTimeCannotBeNull"));
					return false;
				}
				if( this.startTime.selectedDate.time > this.endTime.selectedDate.time )
				{
					AlertHandler.alert(LanguageManager.getInstance().getExceptionMessage("exceptionMessage.startTimeCannotBeGreaterThanEndTime"));
					return false;
				}
				return true;
			}
			
			/**
			 * 根据条件查询 
			 */
			protected function loadPage():void
			{
				trace("CmlNoteflowInfoSituationReportModule.loadPage");
				if( validateQueryCondition() )
				{
					var parameter:Object = {};						
					
					var condition:Object = {};
					condition.startTime = startTime.text;
					condition.endTime = endTime.text;
					condition.orgId = orgId.selectedValue;
					condition.flag=isLoopOrg.selected.toString();
					
					parameter.condition = condition;
					
					var msg:CmlNoteflowInfoMgrMsg = new CmlNoteflowInfoMgrMsg();
					msg.args["remoteMethod"]   = "getCmlNoteflowSituationReportPage";
					msg.args["methodPrameter"] = parameter;
					msg.args["resultHandler"]  = "CmlNoteflowInfoSituationReportModule.getCmlNoteflowSituationReportPageResult";
					msg.args["errorHandler"]   = "CmlNoteflowInfoSituationReportModule.getCmlNoteflowSituationReportPageError";
					cmlNoteflowInfoMgrPM.sendCmlNoteflowInfoMgrMsg(msg);		
				}
			}		
			
			
			[MessageHandler(selector="CmlNoteflowInfoSituationReportModule.getCmlNoteflowSituationReportPageResult")]
			public function getCmlNoteflowSituationReportPageResult(p_msg:CmlNoteflowInfoMgrMsg):void
			{
				if(p_msg.result)
				{	
					gridData = p_msg.result.gridResult as ArrayCollection;
					formData = p_msg.result.totalResult as Object;
				}
			}
			
			[MessageHandler(selector="CmlNoteflowInfoSituationReportModule.getCmlNoteflowSituationReportPageError")]
			public function getCmlNoteflowSituationReportPageError(p_msg:CmlNoteflowInfoMgrMsg):void
			{
				
			}
			
			public function initSelectDate():void
			{
				startTime.selectedDate = DateUtils.createDate(-7);
				endTime.selectedDate = DateUtils.createDate(0);
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<parsley:ContextBuilder>
			<parsley:ViewSettings autoremoveViewRoots="false"/>
			<parsley:Scope name="CmlNoteflowInfoSituationReportModule"/> 
			<parsley:MessageSettings defaultReceiverScope="CmlNoteflowInfoSituationReportModule"/>
			<parsley:FlexConfig type="{CmlNoteflowInfoMgrConfig}"/>
			<parsley:FlexConfig type="{CmlNoteflowDetailInfoConfig}"/>
			<parsley:FlexConfig type="{CmlSentInfoConfig}"/>
			<parsley:FlexConfig type="{DataDictConfig}"/>
		</parsley:ContextBuilder>
		<parsley:Configure/>
	</fx:Declarations>
	
	<fx:Declarations>
		<mx:StringValidator id="validateStartTime" source="{startTime}" property="text" required="true" /> 
		<mx:StringValidator id="validateEndTime"   source="{endTime}"   property="text" required="true" />
	</fx:Declarations>
	<s:BorderContainer width="100%" height="100%" styleName="BorderContainer">
		
		<s:layout>
			<s:VerticalLayout gap="0" paddingTop="0"/>
		</s:layout>
		
		<!-- 查询条件 -->
		<grg:AdvancedSearchBar textAlign="center" styleName="SearchBar" borderVisible="false">
			
			<grg:layout>
				<s:VerticalLayout paddingTop="0" gap="0"/>
			</grg:layout>
			
			<mx:HBox width="100%" styleName="firHBoxStyle" paddingRight="0" height="30">
				
				<grg:TitleBar id="titleMgr" locale="titlemsg" width="50%" />
				
				<mx:HBox height="30"  width="100%" styleName="senHBoxStyle" paddingTop="2" paddingBottom="3" horizontalAlign="right">
					<mx:HBox styleName="searchStyle" height="25"> 
						<!-- 清分日期 -->
						<grg:Label locale="clearingDateColon" />
						<userDefined:SuperDateField id="startTime"  required="true"
													selectedDate="{DateUtils.createDate(-7)}"
													selectableRange="{{rangeEnd:endTime.selectedDate}}"/>
						<grg:Label locale="to" />
						<userDefined:SuperDateField id="endTime" required="true" 
													selectedDate="{DateUtils.createDate(0)}"
													selectableRange="{{rangeStart:startTime.selectedDate}}"/>
						
						<!--是否循环遍历子机构：-->
						<grg:CheckBox id="isLoopOrg" selected="true">
						</grg:CheckBox>
						
						<!-- 所属机构 -->
						<grg:Label locale="organizationColon"/>
						<grg:GRGComboBoxOrgTree id="orgId" defaultField="true" width="120" textAlign="left" treeHeight="300" />
						
						<!-- 查询、高级、重置等按钮 -->
						<grg:SearchButton id="btn_search" menuId="{menu.id}" locale="searchButton" iconType="query" click="searchButtonClickHandler(event)" />
						<grg:ResetButton id="resetBtn" iconType="reset" locale="resetButton" resetControls="{[this.orgId]}" click="initSelectDate()"/>
					</mx:HBox>
				</mx:HBox>
			</mx:HBox>
			
		</grg:AdvancedSearchBar>
		
		
		
		<!-- 表格部份  -->
		<grg:DataGrid id="dataGrid" dataProvider="{gridData}"
					  width="100%" height="100%" textAlign="center" styleName="DataGrid">
			<grg:columns>
				
				<!--所属机构-->
				<grg:RODataGridColumn labelField="orgName"
									  locale="orgName" 
									  dataField="pathCode"
									  valueField="pathCode"
									  service="orgInfoService"
									  method="getAllOrg" 
									  textAlign="center"
									  width="250" />
				
				<grg:DataGridColumn locale="clearingDate"    dataField="clearingDate"     width="150" labelFunction="{formatClearingDate}" />
				<grg:DataGridColumn locale="noteCount"     dataField="noteCount"    width="150" />
				<grg:DataGridColumn locale="totalNotes"  dataField="totalNotes" width="150" />
				
			</grg:columns>
		</grg:DataGrid>
		
		<!-- 列统计信息 -->
		<grg:Form>
			<grg:FormItem width="100%" locale="allNoteCount">
				<grg:TextInput text="{formData.allNoteCount}" width="200" editable="false" />
			</grg:FormItem>
			<grg:FormItem width="100%" locale="allTotalNotes">
				<grg:TextInput text="{formData.allTotalNotes}" width="200" editable="false" />
			</grg:FormItem>
			
		</grg:Form>
		
	</s:BorderContainer>
	
</grg:TabModule>
