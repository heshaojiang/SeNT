<?xml version="1.0" encoding="utf-8"?>
<grg:TabModule xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:parsley="http://www.spicefactory.org/parsley"
			   xmlns:grg="http://grg.grgbanking.com/platform/"
			   dataDictionaryPaths="{[CmlMgrConsts.FLOW_STAGE, CmlMgrConsts.CLEARING_CENTER_FUND_OUT_TYPE, CmlMgrConsts.FLOW_STATUS]}"
			   locale="fundOutModule"
			   layout="vertical" 
			   width="100%" height="100%"
			   xmlns:userDefined="platform.date.*"
			   creationComplete="creationCompleteHandler(event)"
			   >
	
	<fx:Script>
		<![CDATA[
			import mx.controls.Alert;
			import mx.core.UIComponent;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.events.ValidationResultEvent;
			import mx.formatters.DateFormatter;
			import mx.utils.StringUtil;
			import mx.validators.Validator;
			
			import platform.common.manager.PopUpManager;
			import platform.common.vo.Page;
			import platform.constants.LocaleConsts;
			import platform.dataDict.DataDictConfig;
			
			import sent.common.utils.DateUtils;
			import sent.transmgr.config.BoxInfoConfig;
			import sent.transmgr.config.CmlNoteflowDetailInfoConfig;
			import sent.transmgr.config.CmlNoteflowInfoConfig;
			import sent.transmgr.config.CmlSentInfoConfig;
			import sent.transmgr.constants.CmlMgrConsts;
			import sent.transmgr.constants.CmlNoteflowDetailInfoConsts;
			import sent.transmgr.message.CmlNoteflowDetailInfoMsg;
			import sent.transmgr.pm.CmlNoteflowDetailInfoPM;
			import sent.transmgr.pm.CmlSentInfoPM;
			
			
			[Bindable]
			public var noteflowDetailPage:Page = new Page();
			
			
			[Inject]
			[Bindable]
			public var cmlNoteflowDetailInfoPM:CmlNoteflowDetailInfoPM;
			
			[Inject]
			[Bindable]
			public var cmlSentInfoPM:CmlSentInfoPM;
			
			
			public function transformFundOutType(p_item:Object, column:DataGridColumn):String
			{
				currentDataDictPath = CmlMgrConsts.CLEARING_CENTER_FUND_OUT_TYPE;
				return super.transferDataDict(p_item, column);
			}
			
			public function transformFlowStage(p_item:Object, column:DataGridColumn):String
			{
				currentDataDictPath = CmlMgrConsts.FLOW_STAGE;
				return super.transferDataDict(p_item, column);
			}
			
			public function transformFlowStatus(p_item:Object, column:DataGridColumn):String
			{
				currentDataDictPath = CmlMgrConsts.FLOW_STATUS;
				return super.transferDataDict(p_item, column);
			}
			
			public function transformOperDate(p_item:Object, column:DataGridColumn):String
			{
				var date:String = p_item.date;
				if( date==null )
				{
					return null;
				}
				return DateUtils.formatYYYYMMDDHHMISS(date);
			}
			
			/**
			 * 
			 */
			override public function dispose():void
			{
				trace("FundOutModule.dispose");
			}
			
			/**
			 * 获取页结果集
			 */		
			override protected function viewUpdateComplete():void
			{
				trace("FundOutModule.viewUpdateComplete");
			}
			
			/**
			 * 
			 */
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				trace("FundOutModule.creationCompleteHandler");
			}
			
			
			protected function searchButtonClickHandler(event:MouseEvent):void
			{
				trace("FundOutModule.searchButtonClickHandler");
				noteflowDetailPage.pageNo = 1;
				loadPage();
			}
			
			/**
			 * 
			 */
			private function validateQueryCondition():Boolean
			{
				var errors:Array = Validator.validateAll([validateStartTime, validateEndTime]);
				if( errors.length>0 )
				{
					var error:ValidationResultEvent = errors[0] as ValidationResultEvent;
					var validator:Validator = error.target as Validator;
					var ui:UIComponent = validator.source as UIComponent;
					ui.setFocus();
					return false;
				}
				
				return true;
			}
			
			/**
			 * 根据条件查询 
			 */
			protected function loadPage():void
			{
				trace("FundOutModule.loadPage");
				if( validateQueryCondition() )
				{
					var parameter:Object = {};
					
					parameter.page = noteflowDetailPage;
					
					var condition:Object = {};
					condition.startTime  = this.startTime.text;
					condition.endTime    = this.endTime.text;
					condition.flowStage  = [CmlNoteflowDetailInfoConsts.FLOW_STAGE_DELIVER_BY_CASH_BOX_INBANK, 		  // ATM分捆配钞
											CmlNoteflowDetailInfoConsts.FLOW_STAGE_DELIVER_BY_CASH_BOX_FOROTHERBANK,	  // ATM整箱配钞
											CmlNoteflowDetailInfoConsts.FLOW_STAGE_DELIVER_BY_CASH_BOX_BYPBOC       // 人行钞袋配钞
											];
					condition.cashboxNum = this.cashboxNum.text;
					condition.operator   = this.operator.text;
					condition.orgId      = this.orgId.selectedValue;
					condition.flag=isLoopOrg.selected.toString();
					
					parameter.condition = condition;
					
					var msg:CmlNoteflowDetailInfoMsg = new CmlNoteflowDetailInfoMsg();
					msg.args["remoteMethod"]   = "queryCmlNoteflowDetailInfoPage";
					msg.args["methodPrameter"] = parameter;
					msg.args["resultHandler"]  = "FundOutModule.queryCmlNoteflowDetailInfoPageResult";
					msg.args["errorHandler"]   = "FundOutModule.queryCmlNoteflowDetailInfoPageError";
					
					cmlNoteflowDetailInfoPM.sendCmlNoteflowDetailInfoMsg(msg);
				}
			}
			
			/**
			 * 
			 */
			[MessageHandler(selector="FundOutModule.queryCmlNoteflowDetailInfoPageResult")]
			public function queryCmlNoteflowDetailInfoPageResult(msg:CmlNoteflowDetailInfoMsg):void
			{
				trace("FundOutModule.queryCmlNoteflowDetailInfoPageResult");
				noteflowDetailPage = msg.result as Page;
			}
			
			/**
			 * 
			 */
			[MessageHandler(selector="FundOutModule.queryCmlNoteflowDetailInfoPageError")]
			public function queryCmlNoteflowDetailInfoPageError(msg:CmlNoteflowDetailInfoMsg):void
			{
				trace("FundOutModule.queryCmlNoteflowDetailInfoPageError");
				noteflowDetailPage = msg.result as Page;
			}
			
			/**
			 * 
			 */
			public function viewRowDetailInfo():void
			{
				var vo:Object = noteflowDetailGrid.selectedItem as Object;
				if( StringUtil.trim(vo.barcodeFlowNum)!="" )
				{
					//查看流转信息的窗口
					var win:ShowCmlNoteflowInfo = new ShowCmlNoteflowInfo();
					
					_context.viewManager.addViewRoot(win);
					PopUpManager.showForm4Parsley(win);
					
					win.initData(vo.barcodeFlowNum);
				}
				else
				{
					//查看钱箱流转信息的窗口
					var cashboxflowInfoForm:ShowCashboxFlowInfoForm = new ShowCashboxFlowInfoForm();
					cashboxflowInfoForm.boxNum = vo.barcode1;
					_context.viewManager.addViewRoot(cashboxflowInfoForm);
					PopUpManager.showForm4Parsley(cashboxflowInfoForm);
					cashboxflowInfoForm.init();
				}
			}
			
			/**
			 * 
			 */
			public function viewMoneyBoxFlowInfo():void
			{
				//查看钱箱流转信息的窗口
			/* 	var vo:Object = noteflowDetailGrid.selectedItem as Object;
				var cashboxflowInfoForm:ShowCashboxFlowInfoForm = new ShowCashboxFlowInfoForm();
				cashboxflowInfoForm.boxNum = vo.barcode1;
				_context.viewManager.addViewRoot(cashboxflowInfoForm);
				PopUpManager.showForm4Parsley(cashboxflowInfoForm);
				cashboxflowInfoForm.init(); */
				var obj:Object = noteflowDetailGrid.selectedItem as Object;
				if( StringUtil.trim(obj.barcodeFlowNum)!=""||StringUtil.trim(obj.barcodeFlowNum)!=null )
				{
					//查看流转信息的窗口
					var win:TabWinForm=new TabWinForm();
					
					_context.viewManager.addViewRoot(win);
					PopUpManager.showForm4Parsley(win);
					
					//win.initData2(obj.cmlNoteflowInfo.id,obj.barcodeFlowNum,obj.clearingDate);
					win.initData2("",obj.barcodeFlowNum,obj.clearingDate,obj.date);
				}
			}
			

			
			/**
			 * 行内出库
			 */
			public function deliverCashInBank():void
			{
				trace("FundOutModule.deliverKXCashBox");
				var win:CashBoxOutOfBranchForm = new CashBoxOutOfBranchForm();
				win.flowStage = CmlNoteflowDetailInfoConsts.FLOW_STAGE_DELIVER_BY_CASH_BOX_INBANK;
				win.addEventListener(CloseEvent.CLOSE, onFormWindowClosed);
				_context.viewManager.addViewRoot(win);
				PopUpManager.showForm4Parsley(win);
				
				if( noteflowDetailGrid.checkedItems.length>0 )
				{
					win.cashboxNum.text = noteflowDetailGrid.selectedItem.barcode1;
				}
			}
			
			/**
			 * 同业出库
			 */
			public function deliverCashForOtherBank():void
			{
				trace("FundOutModule.deliverKXCashBox");
				var win:CashBoxOutOfBranchForm = new CashBoxOutOfBranchForm();
				win.flowStage = CmlNoteflowDetailInfoConsts.FLOW_STAGE_DELIVER_BY_CASH_BOX_FOROTHERBANK;
				win.addEventListener(CloseEvent.CLOSE, onFormWindowClosed);
				_context.viewManager.addViewRoot(win);
				PopUpManager.showForm4Parsley(win);
				
				if( noteflowDetailGrid.checkedItems.length>0 )
				{
					win.cashboxNum.text = noteflowDetailGrid.selectedItem.barcode1;
				}
			}
			
			/**
			 * 人行出库
			 */
			public function deliverCashByPboc():void
			{
				trace("FundOutModule.deliverKXCashBox");
				var win:CashBoxOutOfBranchForm = new CashBoxOutOfBranchForm();
				win.flowStage = CmlNoteflowDetailInfoConsts.FLOW_STAGE_DELIVER_BY_CASH_BOX_BYPBOC;
				win.addEventListener(CloseEvent.CLOSE, onFormWindowClosed);
				_context.viewManager.addViewRoot(win);
				PopUpManager.showForm4Parsley(win);
				
				if( noteflowDetailGrid.checkedItems.length>0 )
				{
					win.cashboxNum.text = noteflowDetailGrid.selectedItem.barcode1;
				}
			}
			
			/**
			 * 
			 */
			protected function onFormWindowClosed(event:CloseEvent):void
			{
				loadPage();
			}
			
			/**
			 * 显示交易信息和冠字号信息
			 * */
			public function showTransDetailInfo():void{
				var obj:Object=noteflowDetailGrid.selectedItem as Object;
				var win:ViewCmlTaskSentInfo=new ViewCmlTaskSentInfo();
				win.obj=obj;
				_context.viewManager.addViewRoot(win);
				PopUpManager.showForm4Parsley(win);
				win.init();
			}
			
			public function initSelectDate():void
			{
				startTime.selectedDate = DateUtils.createDate(-6, 'yyyyMMdd');
				endTime.selectedDate = DateUtils.createDate(1, 'yyyyMMdd');
			}
			
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<parsley:ContextBuilder>
			<parsley:ViewSettings autoremoveViewRoots="false"/>
			<parsley:Scope name="FundOutModule"/> 
			<parsley:MessageSettings defaultReceiverScope="FundOutModule"/>
			<parsley:FlexConfig type="{CmlNoteflowInfoConfig}"/>
			<parsley:FlexConfig type="{CmlNoteflowDetailInfoConfig}"/>
			<parsley:FlexConfig type="{CmlSentInfoConfig}"/>
			<parsley:FlexConfig type="{BoxInfoConfig}"/>
			<parsley:FlexConfig type="{DataDictConfig}"/>
		</parsley:ContextBuilder>
		<parsley:Configure/>
	</fx:Declarations>
	
	<fx:Declarations>
		<mx:StringValidator id="validateStartTime" source="{startTime}" property="text" required="true" /> 
		<mx:StringValidator id="validateEndTime"   source="{endTime}"   property="text" required="true" />
		
	</fx:Declarations>
	
	<s:BorderContainer width="100%" height="100%" borderVisible="false">
		
		<s:layout>
			<s:VerticalLayout gap="0" paddingTop="0"/>
		</s:layout>
		
		<grg:AdvancedSearchBar textAlign="center" styleName="SearchBar" borderVisible="false">
			
			<grg:layout>
				<s:VerticalLayout paddingTop="0" paddingBottom="0" gap="0" />
			</grg:layout>
			
			<!-- 搜索的第一行 -->
			<mx:HBox width="100%" height="30"
					 paddingLeft="10" paddingTop="4" paddingBottom="0" paddingRight="10" 
					 verticalAlign="top">
				
				<grg:TitleBar id="titleMgr" locale="titlemsg" width="50%" />
				
				<mx:HBox paddingLeft="5" paddingRight="2" paddingTop="2" paddingBottom="2" 
						 horizontalGap="0" verticalAlign="middle" 
						 backgroundColor="#E4E4E4" cornerRadius="4">
					
					<!--是否循环遍历子机构：-->
					<grg:CheckBox id="isLoopOrg" selected="true">
					</grg:CheckBox>

					
					<!-- 所属机构 -->
					<grg:Label locale="organizationColon"/>
					<grg:GRGComboBoxOrgTree id="orgId" defaultField="true" width="100" textAlign="left" treeHeight="300" />
					
					<s:Spacer width="10" />
					<!-- 钱箱号 -->
					<grg:Label locale="moneyBoxNumColon"/>
					<grg:TextInput id="cashboxNum" textAlign="left" width="100" height="20" styleName="TextInput" />
					
					<s:Spacer width="10" />
					<!-- 操作日期 -->
					<grg:Label locale="operDateColon" />
					<userDefined:SuperDateField id="startTime" required="true"
										selectedDate="{DateUtils.createDate(-6, 'yyyyMMdd')}"
										selectableRange="{{rangeEnd:endTime.selectedDate}}"/>
					<s:Spacer width="5" />
					<grg:Label locale="to" />
					<s:Spacer width="5" />
					<userDefined:SuperDateField id="endTime" required="true" 
										selectedDate="{DateUtils.createDate(1, 'yyyyMMdd')}"
										selectableRange="{{rangeStart:startTime.selectedDate}}"/>
					<s:Spacer width="10" />					
					
					<!-- 查询、高级、重置等按钮 -->
					<grg:SearchButton id="btn_search" menuId="{menu.id}" locale="searchButton" iconType="query" click="searchButtonClickHandler(event)" />
					<s:Spacer width="2" />
					<grg:ExpansionButton locale ="moreSearch" iconType="pulldown"/>
					<s:Spacer width="2" />
					<grg:ResetButton id="resetBtn" iconType="reset" locale="resetButton" click="initSelectDate()"
									 resetControls="{[this.cashboxNum, this.operator, this.orgId]}"/>
					
				</mx:HBox>
				
			</mx:HBox>
			
			<!-- 高级搜索 -->
			<s:BorderContainer width="100%" borderVisible="false" borderWeight="0">
				
				<s:layout>
					<s:VerticalLayout gap="0" paddingTop="0" paddingBottom="0" />
				</s:layout>
				
				<s:BorderContainer width="100%" height="4" borderVisible="false" borderWeight="0"
								   backgroundImage="@Embed(source='resources/theme/newui/more_search.png')">
				</s:BorderContainer>
				
				<s:BorderContainer width="100%" backgroundAlpha="0" borderWeight="0" borderVisible="false">
					
					<s:layout>
						<s:HorizontalLayout gap="0" paddingLeft="10" paddingRight="10" horizontalAlign="right" verticalAlign="middle" />
					</s:layout>
					
					<!-- 操作人 -->
					<grg:Label locale="operatorColon" />
					<grg:TextInput id="operator" restrict="0-9a-zA-Z*-_" width="100" height="20" maxnum="32"
								   textAlign="left" styleName="TextInput" />
					
				</s:BorderContainer>
				
			</s:BorderContainer>
			
		</grg:AdvancedSearchBar>
		
		<!-- 中间按钮部份 -->
		<mx:HBox width="100%" height="29" verticalAlign="top" paddingTop="1" paddingLeft="10">
			<s:BorderContainer height="26" borderVisible="false" cornerRadius="5" backgroundColor="#e4e4e4">
				<s:layout>
					<s:HorizontalLayout paddingLeft="4" paddingTop="2"/>
				</s:layout>
				<!--<grg:GRGModuleButtonBar id="privilegeBar" barType="button" menuId="{menu.id}" />-->
				<grg:GRGModuleButtonBar2 align="center" menuId="{menu.id}">
					
					<!--行内出库-->
					<grg:Button id="deliverCashInBankBtn" locale="deliverCashInBank" privilegeCode="deliverCashInBank" 
								icon="@Embed('resources/theme/images/icons/output.png')" click="deliverCashInBank()" />
					<!--同业出库-->
					<grg:Button id="deliverCashForOtherBankBtn" locale="deliverCashForOtherBank" privilegeCode="deliverCashForOtherBank" 
								icon="@Embed('resources/theme/images/icons/output.png')" click="deliverCashForOtherBank()" />
					
					<!--人行出库-->
					<grg:Button id="deliverCashByPbocBtn" locale="deliverCashByPboc" privilegeCode="deliverCashByPboc" 
								icon="@Embed('resources/theme/images/icons/output.png')" click="deliverCashByPboc()" />

				</grg:GRGModuleButtonBar2>
			</s:BorderContainer>
		</mx:HBox>
		
		<!-- 表格部份  -->
		<grg:DataGrid id="noteflowDetailGrid" dataProvider="{noteflowDetailPage.result}"
					  width="100%" height="100%" textAlign="center" styleName="DataGrid">
			<grg:columns>
				<!--<grg:CheckBoxColumn id="checkBoxCol" textAlign="center" sortable="false" draggable="false" editable="false" resizable="false" />-->
		
				<grg:DataGridColumn locale="moneyBoxNumColon"     dataField="barcode1"      />
				<!--<grg:DataGridColumn locale="barcodeFlowNum" dataField="barcodeFlowNum"/>-->
				<grg:DataGridColumn locale="totalNotes" dataField="cmlNoteflowInfo.statisAmt"  />
				
				<grg:DataGridColumn locale="currFlowStage"  dataField="baseFlowStage" labelFunction="{transformFlowStage}" />
				<!--<grg:DataGridColumn locale="status"         dataField="status"         width="55" labelFunction="{transformFlowStatus}" />-->
				<grg:DataGridColumn locale="barcodeFlowNum"       dataField="barcodeFlowNum"     />
				<!--接收机构-->
				<grg:RODataGridColumn labelField="orgName"
									  locale="receiveOrgName" 
									  dataField="receivePathCode"
									  valueField="orgCode"
									  service="orgInfoService"
									  method="getAllOrg" 
									  textAlign="center"
									  />
				<!--<grg:DataGridColumn locale="atmCode" dataField="atmCode" />-->
				<grg:DataGridColumn locale="operator"       dataField="operator"      />
				<grg:DataGridColumn locale="operDate"       dataField="date"          labelFunction="{transformOperDate}" />
				
				<grg:DataGridColumn locale="operations" width="55" fontWeight="normal" textAlign="center">
					<grg:itemRenderer>
						<fx:Component>
							<s:MXDataGridItemRenderer>
								<!--<grg:GRGModuleButtonBar barType="icon" menuId="{parentDocument.menu.id}"/>-->
								<grg:GRGModuleButtonBar2 width="100%" height="16" align="center" menuId="{parentDocument.menu.id}">
									<!--查看详情-->
									<!--<grg:Image id="viewRowDetailInfoBtn" privilegeCode="viewRowDetailInfo"
											   source="@Embed('/resources/theme/images/icons/detail.png')" 
											   locale="viewRowDetailInfo" width="16" height="16"
											   click="parentDocument.viewRowDetailInfo()" />-->
									<!--查看钱箱流转详情-->
									<!--<grg:Image id="viewMoneyBoxFlowInfoBtn" privilegeCode="viewMoneyBoxFlowInfo"
											   source="@Embed('/resources/theme/images/icons/detail2.png')" 
											   locale="viewMoneyBoxFlowInfo" width="16" height="16"
											   click="parentDocument.viewMoneyBoxFlowInfo()" />-->
									<!--查看详情-->
								<!--	<grg:Image id="viewRowDetailInfoBtn" privilegeCode="showTransDetailInfo"
											   source="@Embed('/resources/theme/images/icons/detail.png')" 
											   locale="viewRowDetailInfo" width="16" height="16"
											   click="parentDocument.showTransDetailInfo()" />-->
									<!--查看钱箱流转详情-->
									<grg:Image id="viewMoneyBoxFlowInfoBtn" privilegeCode="viewMoneyBoxFlowInfo"
											   source="@Embed('/resources/theme/images/icons/detail2.png')" 
											   locale="viewMoneyBoxFlowInfo" width="16" height="16"
											   click="parentDocument.viewMoneyBoxFlowInfo()" />
								</grg:GRGModuleButtonBar2>
							</s:MXDataGridItemRenderer>
						</fx:Component>
					</grg:itemRenderer>
				</grg:DataGridColumn>
			</grg:columns>
		</grg:DataGrid>
		
		<!-- 分页栏 -->
		<grg:PageNavigatorBar id="buttonPagingBar" bottom="0" pageVo="{noteflowDetailPage}" pagingFunction="{loadPage}" />
		
	</s:BorderContainer>
	
</grg:TabModule>
