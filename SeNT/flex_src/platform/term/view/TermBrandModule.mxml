<?xml version = "1.0" encoding = "utf-8"?>
<grg:TabModule 
	width="100%" height="100%"
	layout = "horizontal" dataDictionaryPaths = "{[TermConsts.ENABLE_OR_DISABLE]}"
	locale = "termBrandModule"
	xmlns:fx = "http://ns.adobe.com/mxml/2009"
	xmlns:s = "library://ns.adobe.com/flex/spark"
	xmlns:mx = "library://ns.adobe.com/flex/mx"
	xmlns:parsley="http://www.spicefactory.org/parsley" 
	xmlns:grg="http://grg.grgbanking.com/platform/" >
	
	<fx:Declarations>
		<parsley:ContextBuilder>
			<parsley:ViewSettings autoremoveViewRoots="false"/>
			<parsley:Scope name="TermBrandModule"/> 
			<parsley:MessageSettings defaultReceiverScope="TermBrandModule"/>
			<parsley:FlexConfig type="{DataDictConfig}"/>
			<parsley:FlexConfig type="{TermBrandModuleConfig}"/>
		</parsley:ContextBuilder>
		<parsley:Configure/>
	</fx:Declarations>
	
	<!--data binding start-->
	<fx:Binding source="brandName.text" destination="pm.condi"/>
	<!--data binding end-->
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ListCollectionView;
			import mx.core.IFlexDisplayObject;
			
			import platform.common.manager.AlertHandler;
			import platform.common.manager.PopUpManager;
			import platform.common.vo.Page;
			import platform.constants.LocaleConsts;
			import platform.dataDict.DataDictConfig;
			import platform.term.config.TermBrandModuleConfig;
			import platform.term.constants.TermConsts;
			import platform.term.constants.TermLocalKeyConsts;
			import platform.term.message.TermBrandMsg;
			import platform.term.pm.TermBrandModulePM;
			import platform.vo.term.TermBrandVo;
			
			/*========================================================*/
			/*   Property                                             */
			/*========================================================*/
			
			[Inject]
			[Bindable]
			public var pm:TermBrandModulePM;
			
			
			/*========================================================*/
			/*   Function                                             */
			/*========================================================*/
			
			override protected function getDataDictCallback():void
			{
				(termBrandPageGrid.dataProvider as ListCollectionView).refresh();
			}
			
			/**显示数据字典转换出来的值**/
			override protected function transferDataDict(p_item:Object, column:DataGridColumn):String
			{
				if(column.dataField == "status")
					currentDataDictPath = TermConsts.ENABLE_OR_DISABLE;
				return super.transferDataDict(p_item, column);
			}
			
			override protected function viewUpdateComplete():void
			{
				/* pm.loadTermBrandPage(); 防止重复请求*/
				privilegeBar.menuId = menu.id;
			}
			
			override public function dispose():void
			{
				termBrandPageGrid.checkedItems = [];
				/* resetBtn.reset(); */
				resetBtn.dispose();
			}
			
			//Add 
			public function add():void
			{				
				//set vo
				var vo:TermBrandVo = new TermBrandVo();
				vo.formType = TermLocalKeyConsts.ADD_TERMBRAND_FORM;
				openWin(TermLocalKeyConsts.ADD_TERMBRAND_FORM, vo);
				
			}
			
			/**
			 * edit datadir item
			 * */
			public function edit():void
			{
				if (termBrandPageGrid.checkedItems.length != 1){
					AlertHandler.alert(LocaleConsts.NO_SELECTED_RECORD);
					//AlertHandler.error("必须选择至少一项!!!");
					return;
				}
				
				var temp:TermBrandVo = TermBrandVo(termBrandPageGrid.checkedItems[0]);
				var vo:TermBrandVo = temp as TermBrandVo;
				vo.formType = TermLocalKeyConsts.UPDATE_TERMBRAND_FORM;
				openWin(TermLocalKeyConsts.UPDATE_TERMBRAND_FORM, vo);
				
			}
			
			/**
			 * delete datadir item
			 * */
			public function del():void
			{
				pm.delTermBrand(termBrandPageGrid.checkedItems);
			}
			
			override protected function parsleyInit():void
			{
				pm.menuId = menu.id;
			}
			
			/**
			 * dispatch event
			 * */
			public function openWin(p_winName:String, p_vo:TermBrandVo):void
			{
				//dispatch event
				var win:TermBrandForm = new TermBrandForm();
				
				win.titleKey = p_winName;
				
				//加入到parsley上下文
				_context.viewManager.addViewRoot(win);
				PopUpManager.showForm4Parsley(IFlexDisplayObject(win), this);				
				win.pm.vo = p_vo;
				win.pm.menuId = this.menu.id;
			}
			
			/**
			 * 获取页结果集
			 */		
			[MessageHandler(selector="getTermBrandPageResult")]
			public function getPageHandler(p_msg:TermBrandMsg):void
			{
				if(p_msg.result)
					termBrandPageGrid.checkedItems = [];
			}
			
			
			private function statusLabel(item : Object,column : DataGridColumn):String{
				return "";	
			}
			
		]]>
	</fx:Script>
	<s:BorderContainer 
		width="100%" height="100%"
		styleName = "BorderContainer">
		<s:layout>
			<s:VerticalLayout  gap="0" paddingTop="0" />
		</s:layout>
		
		<!--<grg:TitleBar/>-->
		<mx:HBox width="100%" styleName="firHBoxStyle" height="30">
			<grg:TitleBar locale="titlemsg" width="50%"/>
			<mx:HBox  width="100%" styleName="senHBoxStyle">
				<mx:HBox height="25" styleName="searchStyle">
					<s:BorderContainer width = "100%" height = "25" backgroundAlpha="0" borderVisible = "false">
						<s:layout>
							<s:HorizontalLayout 
								horizontalAlign = "left"
								gap="2"
								verticalAlign = "middle" />
						</s:layout>
						<grg:Label locale = "brandNameItem" />
						<grg:TextInput id="brandName" textAlign="left"
									   width="150" height="20"
									   styleName = "TextInput" />
						<grg:SearchButton id="btn_search"
										  locale = "searchButton" menuId="{menu.id}" 
										  iconType = "query" click="pm.page = new Page();pm.loadTermBrandPage()"/>
						<grg:ResetButton id="resetBtn" iconType="reset" locale="resetButton" resetControls="{[this.brandName]}"/>
						
					</s:BorderContainer>
				</mx:HBox>
				
			</mx:HBox>
		</mx:HBox>
		<mx:HBox  width="100%"  styleName="moduleButtonBarHBoxstyle" >
			<s:BorderContainer styleName="moduleButtonBarstyle" height="25">
				<s:layout>
					<s:HorizontalLayout paddingLeft="4" paddingTop="2"/>
				</s:layout>	
				<grg:GRGModuleButtonBar id="privilegeBar" barType="button" menuId="{menu.id}"/>
			</s:BorderContainer>
		</mx:HBox>
		<mx:HBox width="100%" height="100%" styleName="datagridHBoxStyle">
			<grg:DataGrid id="termBrandPageGrid" dataProvider="{pm.page.result}"
						  width="100%" height="100%"
						  paddingLeft="20"
						  styleName = "DataGrid">
				<grg:columns>
					<grg:CheckBoxColumn id="checkBoxCol"
										textAlign = "center"
										sortable = "false"
										draggable = "false"
										editable = "false"
										resizable = "false" />
					<grg:DataGridColumn locale = "code"
										dataField = "code" 
										textAlign = "left"
										/>
					<grg:DataGridColumn locale = "brandNameItem"
										dataField = "brandName" 
										textAlign = "left"
										/>
					<grg:DataGridColumn locale = "companyNameItem"
										dataField = "companyName" 
										textAlign = "left"
										/>
					<grg:DataGridColumn locale = "companyAddressItem"
										dataField = "companyAddress" 
										textAlign = "left"
										/>
					<grg:DataGridColumn locale = "status" 
										labelFunction="{transferDataDict}"
										dataField = "status"
										textAlign = "left"
										/>
				</grg:columns>
			</grg:DataGrid>
		</mx:HBox>
		<grg:PageNavigatorBar id="termBrandPagingBar"
							  x = "0" pageVo="{pm.page}"
							  pagingFunction="{pm.loadTermBrandPage}"
							  bottom = "0" />
	</s:BorderContainer>
</grg:TabModule>
